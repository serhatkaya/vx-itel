{"version":3,"file":"vx-itel.mjs","sources":["../../../projects/vx-itel/src/lib/enums/country-iso.enum.ts","../../../projects/vx-itel/src/lib/data/country-code.ts","../../../projects/vx-itel/src/lib/enums/search-country-field.enum.ts","../../../projects/vx-itel/src/lib/vx-itel.validator.ts","../../../projects/vx-itel/src/lib/enums/phone-number-format.enum.ts","../../../projects/vx-itel/src/lib/directives/native-element-injector.directive.ts","../../../projects/vx-itel/src/lib/vx-itel.component.html","../../../projects/vx-itel/src/lib/vx-itel.component.ts","../../../projects/vx-itel/src/lib/vx-itel.module.ts","../../../projects/vx-itel/src/public_api.ts","../../../projects/vx-itel/src/vx-itel.ts"],"sourcesContent":["export enum CountryISO {\r\n\tAfghanistan = 'af',\r\n\tAlbania = 'al',\r\n\tAlgeria = 'dz',\r\n\tAmericanSamoa = 'as',\r\n\tAndorra = 'ad',\r\n\tAngola = 'ao',\r\n\tAnguilla = 'ai',\r\n\tAntiguaAndBarbuda = 'ag',\r\n\tArgentina = 'ar',\r\n\tArmenia = 'am',\r\n\tAruba = 'aw',\r\n\tAustralia = 'au',\r\n\tAustria = 'at',\r\n\tAzerbaijan = 'az',\r\n\tBahamas = 'bs',\r\n\tBahrain = 'bh',\r\n\tBangladesh = 'bd',\r\n\tBarbados = 'bb',\r\n\tBelarus = 'by',\r\n\tBelgium = 'be',\r\n\tBelize = 'bz',\r\n\tBenin = 'bj',\r\n\tBermuda = 'bm',\r\n\tBhutan = 'bt',\r\n\tBolivia = 'bo',\r\n\tBosniaAndHerzegovina = 'ba',\r\n\tBotswana = 'bw',\r\n\tBrazil = 'br',\r\n\tBritishIndianOceanTerritory = 'io',\r\n\tBritishVirginIslands = 'vg',\r\n\tBrunei = 'bn',\r\n\tBulgaria = 'bg',\r\n\tBurkinaFaso = 'bf',\r\n\tBurundi = 'bi',\r\n\tCambodia = 'kh',\r\n\tCameroon = 'cm',\r\n\tCanada = 'ca',\r\n\tCapeVerde = 'cv',\r\n\tCaribbeanNetherlands = 'bq',\r\n\tCaymanIslands = 'ky',\r\n\tCentralAfricanRepublic = 'cf',\r\n\tChad = 'td',\r\n\tChile = 'cl',\r\n\tChina = 'cn',\r\n\tChristmasIsland = 'cx',\r\n\tCocos = 'cc',\r\n\tColombia = 'co',\r\n\tComoros = 'km',\r\n\tCongoDRCJamhuriYaKidemokrasiaYaKongo = 'cd',\r\n\tCongoRepublicCongoBrazzaville = 'cg',\r\n\tCookIslands = 'ck',\r\n\tCostaRica = 'cr',\r\n\tCôteDIvoire = 'ci',\r\n\tCroatia = 'hr',\r\n\tCuba = 'cu',\r\n\tCuraçao = 'cw',\r\n\tCyprus = 'cy',\r\n\tCzechRepublic = 'cz',\r\n\tDenmark = 'dk',\r\n\tDjibouti = 'dj',\r\n\tDominica = 'dm',\r\n\tDominicanRepublic = 'do',\r\n\tEcuador = 'ec',\r\n\tEgypt = 'eg',\r\n\tElSalvador = 'sv',\r\n\tEquatorialGuinea = 'gq',\r\n\tEritrea = 'er',\r\n\tEstonia = 'ee',\r\n\tEthiopia = 'et',\r\n\tFalklandIslands = 'fk',\r\n\tFaroeIslands = 'fo',\r\n\tFiji = 'fj',\r\n\tFinland = 'fi',\r\n\tFrance = 'fr',\r\n\tFrenchGuiana = 'gf',\r\n\tFrenchPolynesia = 'pf',\r\n\tGabon = 'ga',\r\n\tGambia = 'gm',\r\n\tGeorgia = 'ge',\r\n\tGermany = 'de',\r\n\tGhana = 'gh',\r\n\tGibraltar = 'gi',\r\n\tGreece = 'gr',\r\n\tGreenland = 'gl',\r\n\tGrenada = 'gd',\r\n\tGuadeloupe = 'gp',\r\n\tGuam = 'gu',\r\n\tGuatemala = 'gt',\r\n\tGuernsey = 'gg',\r\n\tGuinea = 'gn',\r\n\tGuineaBissau = 'gw',\r\n\tGuyana = 'gy',\r\n\tHaiti = 'ht',\r\n\tHonduras = 'hn',\r\n\tHongKong = 'hk',\r\n\tHungary = 'hu',\r\n\tIceland = 'is',\r\n\tIndia = 'in',\r\n\tIndonesia = 'id',\r\n\tIran = 'ir',\r\n\tIraq = 'iq',\r\n\tIreland = 'ie',\r\n\tIsleOfMan = 'im',\r\n\tIsrael = 'il',\r\n\tItaly = 'it',\r\n\tJamaica = 'jm',\r\n\tJapan = 'jp',\r\n\tJersey = 'je',\r\n\tJordan = 'jo',\r\n\tKazakhstan = 'kz',\r\n\tKenya = 'ke',\r\n\tKiribati = 'ki',\r\n\tKosovo = 'xk',\r\n\tKuwait = 'kw',\r\n\tKyrgyzstan = 'kg',\r\n\tLaos = 'la',\r\n\tLatvia = 'lv',\r\n\tLebanon = 'lb',\r\n\tLesotho = 'ls',\r\n\tLiberia = 'lr',\r\n\tLibya = 'ly',\r\n\tLiechtenstein = 'li',\r\n\tLithuania = 'lt',\r\n\tLuxembourg = 'lu',\r\n\tMacau = 'mo',\r\n\tMacedonia = 'mk',\r\n\tMadagascar = 'mg',\r\n\tMalawi = 'mw',\r\n\tMalaysia = 'my',\r\n\tMaldives = 'mv',\r\n\tMali = 'ml',\r\n\tMalta = 'mt',\r\n\tMarshallIslands = 'mh',\r\n\tMartinique = 'mq',\r\n\tMauritania = 'mr',\r\n\tMauritius = 'mu',\r\n\tMayotte = 'yt',\r\n\tMexico = 'mx',\r\n\tMicronesia = 'fm',\r\n\tMoldova = 'md',\r\n\tMonaco = 'mc',\r\n\tMongolia = 'mn',\r\n\tMontenegro = 'me',\r\n\tMontserrat = 'ms',\r\n\tMorocco = 'ma',\r\n\tMozambique = 'mz',\r\n\tMyanmar = 'mm',\r\n\tNamibia = 'na',\r\n\tNauru = 'nr',\r\n\tNepal = 'np',\r\n\tNetherlands = 'nl',\r\n\tNewCaledonia = 'nc',\r\n\tNewZealand = 'nz',\r\n\tNicaragua = 'ni',\r\n\tNiger = 'ne',\r\n\tNigeria = 'ng',\r\n\tNiue = 'nu',\r\n\tNorfolkIsland = 'nf',\r\n\tNorthKorea = 'kp',\r\n\tNorthernMarianaIslands = 'mp',\r\n\tNorway = 'no',\r\n\tOman = 'om',\r\n\tPakistan = 'pk',\r\n\tPalau = 'pw',\r\n\tPalestine = 'ps',\r\n\tPanama = 'pa',\r\n\tPapuaNewGuinea = 'pg',\r\n\tParaguay = 'py',\r\n\tPeru = 'pe',\r\n\tPhilippines = 'ph',\r\n\tPoland = 'pl',\r\n\tPortugal = 'pt',\r\n\tPuertoRico = 'pr',\r\n\tQatar = 'qa',\r\n\tRéunion = 're',\r\n\tRomania = 'ro',\r\n\tRussia = 'ru',\r\n\tRwanda = 'rw',\r\n\tSaintBarthélemy = 'bl',\r\n\tSaintHelena = 'sh',\r\n\tSaintKittsAndNevis = 'kn',\r\n\tSaintLucia = 'lc',\r\n\tSaintMartin = 'mf',\r\n\tSaintPierreAndMiquelon = 'pm',\r\n\tSaintVincentAndTheGrenadines = 'vc',\r\n\tSamoa = 'ws',\r\n\tSanMarino = 'sm',\r\n\tSãoToméAndPríncipe = 'st',\r\n\tSaudiArabia = 'sa',\r\n\tSenegal = 'sn',\r\n\tSerbia = 'rs',\r\n\tSeychelles = 'sc',\r\n\tSierraLeone = 'sl',\r\n\tSingapore = 'sg',\r\n\tSintMaarten = 'sx',\r\n\tSlovakia = 'sk',\r\n\tSlovenia = 'si',\r\n\tSolomonIslands = 'sb',\r\n\tSomalia = 'so',\r\n\tSouthAfrica = 'za',\r\n\tSouthKorea = 'kr',\r\n\tSouthSudan = 'ss',\r\n\tSpain = 'es',\r\n\tSriLanka = 'lk',\r\n\tSudan = 'sd',\r\n\tSuriname = 'sr',\r\n\tSvalbardAndJanMayen = 'sj',\r\n\tSwaziland = 'sz',\r\n\tSweden = 'se',\r\n\tSwitzerland = 'ch',\r\n\tSyria = 'sy',\r\n\tTaiwan = 'tw',\r\n\tTajikistan = 'tj',\r\n\tTanzania = 'tz',\r\n\tThailand = 'th',\r\n\tTimorLeste = 'tl',\r\n\tTogo = 'tg',\r\n\tTokelau = 'tk',\r\n\tTonga = 'to',\r\n\tTrinidadAndTobago = 'tt',\r\n\tTunisia = 'tn',\r\n\tTurkey = 'tr',\r\n\tTurkmenistan = 'tm',\r\n\tTurksAndCaicosIslands = 'tc',\r\n\tTuvalu = 'tv',\r\n\tUSVirginIslands = 'vi',\r\n\tUganda = 'ug',\r\n\tUkraine = 'ua',\r\n\tUnitedArabEmirates = 'ae',\r\n\tUnitedKingdom = 'gb',\r\n\tUnitedStates = 'us',\r\n\tUruguay = 'uy',\r\n\tUzbekistan = 'uz',\r\n\tVanuatu = 'vu',\r\n\tVaticanCity = 'va',\r\n\tVenezuela = 've',\r\n\tVietnam = 'vn',\r\n\tWallisAndFutuna = 'wf',\r\n\tWesternSahara = 'eh',\r\n\tYemen = 'ye',\r\n\tZambia = 'zm',\r\n\tZimbabwe = 'zw',\r\n\tÅlandIslands = 'ax',\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { CountryISO } from '../enums/country-iso.enum';\r\n\r\n@Injectable()\r\nexport class CountryCode {\r\n\tpublic allCountries = [\r\n\t\t[\r\n\t\t\t'Afghanistan (‫افغانستان‬‎)',\r\n\t\t\tCountryISO.Afghanistan,\r\n\t\t\t'93'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Albania (Shqipëri)',\r\n\t\t\tCountryISO.Albania,\r\n\t\t\t'355'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Algeria (‫الجزائر‬‎)',\r\n\t\t\tCountryISO.Algeria,\r\n\t\t\t'213'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'American Samoa',\r\n\t\t\t'as',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'684',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Andorra',\r\n\t\t\tCountryISO.Andorra,\r\n\t\t\t'376'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Angola',\r\n\t\t\tCountryISO.Angola,\r\n\t\t\t'244'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Anguilla',\r\n\t\t\t'ai',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'264',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Antigua and Barbuda',\r\n\t\t\t'ag',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'268',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Argentina',\r\n\t\t\tCountryISO.Argentina,\r\n\t\t\t'54'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Armenia (Հայաստան)',\r\n\t\t\tCountryISO.Armenia,\r\n\t\t\t'374'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Aruba',\r\n\t\t\tCountryISO.Aruba,\r\n\t\t\t'297'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Australia',\r\n\t\t\tCountryISO.Australia,\r\n\t\t\t'61',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Austria (Österreich)',\r\n\t\t\tCountryISO.Austria,\r\n\t\t\t'43'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Azerbaijan (Azərbaycan)',\r\n\t\t\tCountryISO.Azerbaijan,\r\n\t\t\t'994'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Bahamas',\r\n\t\t\t'bs',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'242',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Bahrain (‫البحرين‬‎)',\r\n\t\t\tCountryISO.Bahrain,\r\n\t\t\t'973'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Bangladesh (বাংলাদেশ)',\r\n\t\t\tCountryISO.Bangladesh,\r\n\t\t\t'880'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Barbados',\r\n\t\t\t'bb',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'246',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Belarus (Беларусь)',\r\n\t\t\tCountryISO.Belarus,\r\n\t\t\t'375'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Belgium (België)',\r\n\t\t\tCountryISO.Belgium,\r\n\t\t\t'32'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Belize',\r\n\t\t\tCountryISO.Belize,\r\n\t\t\t'501'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Benin (Bénin)',\r\n\t\t\tCountryISO.Benin,\r\n\t\t\t'229'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Bermuda',\r\n\t\t\t'bm',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'441',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Bhutan (འབྲུག)',\r\n\t\t\tCountryISO.Bhutan,\r\n\t\t\t'975'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Bolivia',\r\n\t\t\tCountryISO.Bolivia,\r\n\t\t\t'591'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Bosnia and Herzegovina (Босна и Херцеговина)',\r\n\t\t\tCountryISO.BosniaAndHerzegovina,\r\n\t\t\t'387'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Botswana',\r\n\t\t\tCountryISO.Botswana,\r\n\t\t\t'267'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Brazil (Brasil)',\r\n\t\t\tCountryISO.Brazil,\r\n\t\t\t'55'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'British Indian Ocean Territory',\r\n\t\t\tCountryISO.BritishIndianOceanTerritory,\r\n\t\t\t'246'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'British Virgin Islands',\r\n\t\t\t'vg',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'284',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Brunei',\r\n\t\t\tCountryISO.Brunei,\r\n\t\t\t'673'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Bulgaria (България)',\r\n\t\t\tCountryISO.Bulgaria,\r\n\t\t\t'359'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Burkina Faso',\r\n\t\t\tCountryISO.BurkinaFaso,\r\n\t\t\t'226'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Burundi (Uburundi)',\r\n\t\t\tCountryISO.Burundi,\r\n\t\t\t'257'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Cambodia (កម្ពុជា)',\r\n\t\t\tCountryISO.Cambodia,\r\n\t\t\t'855'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Cameroon (Cameroun)',\r\n\t\t\tCountryISO.Cameroon,\r\n\t\t\t'237'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Canada',\r\n\t\t\tCountryISO.Canada,\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'204', '226', '236', '249', '250', '289', '306', '343', '365', '387', '403', '416',\r\n\t\t\t\t'418', '431', '437', '438', '450', '506', '514', '519', '548', '579', '581', '587',\r\n\t\t\t\t'604', '613', '639', '647', '672', '705', '709', '742', '778', '780', '782', '807',\r\n\t\t\t\t'819', '825', '867', '873', '902', '905'\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Cape Verde (Kabu Verdi)',\r\n\t\t\tCountryISO.CapeVerde,\r\n\t\t\t'238'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Caribbean Netherlands',\r\n\t\t\tCountryISO.CaribbeanNetherlands,\r\n\t\t\t'599',\r\n\t\t\t1\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Cayman Islands',\r\n\t\t\t'ky',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'345',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Central African Republic (République centrafricaine)',\r\n\t\t\tCountryISO.CentralAfricanRepublic,\r\n\t\t\t'236'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Chad (Tchad)',\r\n\t\t\tCountryISO.Chad,\r\n\t\t\t'235'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Chile',\r\n\t\t\tCountryISO.Chile,\r\n\t\t\t'56'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'China (中国)',\r\n\t\t\tCountryISO.China,\r\n\t\t\t'86'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Christmas Island',\r\n\t\t\tCountryISO.ChristmasIsland,\r\n\t\t\t'61',\r\n\t\t\t2\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Cocos (Keeling) Islands',\r\n\t\t\tCountryISO.Cocos,\r\n\t\t\t'61',\r\n\t\t\t1\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Colombia',\r\n\t\t\tCountryISO.Colombia,\r\n\t\t\t'57'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Comoros (‫جزر القمر‬‎)',\r\n\t\t\tCountryISO.Comoros,\r\n\t\t\t'269'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)',\r\n\t\t\tCountryISO.CongoDRCJamhuriYaKidemokrasiaYaKongo,\r\n\t\t\t'243'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Congo (Republic) (Congo-Brazzaville)',\r\n\t\t\tCountryISO.CongoRepublicCongoBrazzaville,\r\n\t\t\t'242'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Cook Islands',\r\n\t\t\tCountryISO.CookIslands,\r\n\t\t\t'682'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Costa Rica',\r\n\t\t\tCountryISO.CostaRica,\r\n\t\t\t'506'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Côte d’Ivoire',\r\n\t\t\tCountryISO.CôteDIvoire,\r\n\t\t\t'225'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Croatia (Hrvatska)',\r\n\t\t\tCountryISO.Croatia,\r\n\t\t\t'385'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Cuba',\r\n\t\t\tCountryISO.Cuba,\r\n\t\t\t'53'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Curaçao',\r\n\t\t\tCountryISO.Curaçao,\r\n\t\t\t'599',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Cyprus (Κύπρος)',\r\n\t\t\tCountryISO.Cyprus,\r\n\t\t\t'357'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Czech Republic (Česká republika)',\r\n\t\t\tCountryISO.CzechRepublic,\r\n\t\t\t'420'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Denmark (Danmark)',\r\n\t\t\tCountryISO.Denmark,\r\n\t\t\t'45'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Djibouti',\r\n\t\t\tCountryISO.Djibouti,\r\n\t\t\t'253'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Dominica',\r\n\t\t\tCountryISO.Dominica,\r\n\t\t\t'1767'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Dominican Republic (República Dominicana)',\r\n\t\t\tCountryISO.DominicanRepublic,\r\n\t\t\t'1',\r\n\t\t\t2,\r\n\t\t\t['809', '829', '849']\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Ecuador',\r\n\t\t\tCountryISO.Ecuador,\r\n\t\t\t'593'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Egypt (‫مصر‬‎)',\r\n\t\t\tCountryISO.Egypt,\r\n\t\t\t'20'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'El Salvador',\r\n\t\t\tCountryISO.ElSalvador,\r\n\t\t\t'503'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Equatorial Guinea (Guinea Ecuatorial)',\r\n\t\t\tCountryISO.EquatorialGuinea,\r\n\t\t\t'240'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Eritrea',\r\n\t\t\tCountryISO.Eritrea,\r\n\t\t\t'291'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Estonia (Eesti)',\r\n\t\t\tCountryISO.Estonia,\r\n\t\t\t'372'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Ethiopia',\r\n\t\t\tCountryISO.Ethiopia,\r\n\t\t\t'251'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Falkland Islands (Islas Malvinas)',\r\n\t\t\tCountryISO.FalklandIslands,\r\n\t\t\t'500'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Faroe Islands (Føroyar)',\r\n\t\t\tCountryISO.FaroeIslands,\r\n\t\t\t'298'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Fiji',\r\n\t\t\tCountryISO.Fiji,\r\n\t\t\t'679'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Finland (Suomi)',\r\n\t\t\tCountryISO.Finland,\r\n\t\t\t'358',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'France',\r\n\t\t\tCountryISO.France,\r\n\t\t\t'33'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'French Guiana (Guyane française)',\r\n\t\t\tCountryISO.FrenchGuiana,\r\n\t\t\t'594'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'French Polynesia (Polynésie française)',\r\n\t\t\tCountryISO.FrenchPolynesia,\r\n\t\t\t'689'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Gabon',\r\n\t\t\tCountryISO.Gabon,\r\n\t\t\t'241'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Gambia',\r\n\t\t\tCountryISO.Gambia,\r\n\t\t\t'220'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Georgia (საქართველო)',\r\n\t\t\tCountryISO.Georgia,\r\n\t\t\t'995'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Germany (Deutschland)',\r\n\t\t\tCountryISO.Germany,\r\n\t\t\t'49'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Ghana (Gaana)',\r\n\t\t\tCountryISO.Ghana,\r\n\t\t\t'233'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Gibraltar',\r\n\t\t\tCountryISO.Gibraltar,\r\n\t\t\t'350'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Greece (Ελλάδα)',\r\n\t\t\tCountryISO.Greece,\r\n\t\t\t'30'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Greenland (Kalaallit Nunaat)',\r\n\t\t\tCountryISO.Greenland,\r\n\t\t\t'299'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Grenada',\r\n\t\t\tCountryISO.Grenada,\r\n\t\t\t'1473'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Guadeloupe',\r\n\t\t\tCountryISO.Guadeloupe,\r\n\t\t\t'590',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Guam',\r\n\t\t\t'gu',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'671',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Guatemala',\r\n\t\t\tCountryISO.Guatemala,\r\n\t\t\t'502'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Guernsey',\r\n\t\t\tCountryISO.Guernsey,\r\n\t\t\t'44',\r\n\t\t\t1,\r\n\t\t\t[1481]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Guinea (Guinée)',\r\n\t\t\tCountryISO.Guinea,\r\n\t\t\t'224'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Guinea-Bissau (Guiné Bissau)',\r\n\t\t\tCountryISO.GuineaBissau,\r\n\t\t\t'245'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Guyana',\r\n\t\t\tCountryISO.Guyana,\r\n\t\t\t'592'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Haiti',\r\n\t\t\tCountryISO.Haiti,\r\n\t\t\t'509'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Honduras',\r\n\t\t\tCountryISO.Honduras,\r\n\t\t\t'504'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Hong Kong (香港)',\r\n\t\t\tCountryISO.HongKong,\r\n\t\t\t'852'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Hungary (Magyarország)',\r\n\t\t\tCountryISO.Hungary,\r\n\t\t\t'36'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Iceland (Ísland)',\r\n\t\t\tCountryISO.Iceland,\r\n\t\t\t'354'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'India (भारत)',\r\n\t\t\tCountryISO.India,\r\n\t\t\t'91'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Indonesia',\r\n\t\t\tCountryISO.Indonesia,\r\n\t\t\t'62'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Iran (‫ایران‬‎)',\r\n\t\t\tCountryISO.Iran,\r\n\t\t\t'98'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Iraq (‫العراق‬‎)',\r\n\t\t\tCountryISO.Iraq,\r\n\t\t\t'964'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Ireland',\r\n\t\t\tCountryISO.Ireland,\r\n\t\t\t'353'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Isle of Man',\r\n\t\t\tCountryISO.IsleOfMan,\r\n\t\t\t'44',\r\n\t\t\t2,\r\n\t\t\t[1624]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Israel (‫ישראל‬‎)',\r\n\t\t\tCountryISO.Israel,\r\n\t\t\t'972'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Italy (Italia)',\r\n\t\t\tCountryISO.Italy,\r\n\t\t\t'39',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Jamaica',\r\n\t\t\t'jm',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'876',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Japan (日本)',\r\n\t\t\tCountryISO.Japan,\r\n\t\t\t'81'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Jersey',\r\n\t\t\tCountryISO.Jersey,\r\n\t\t\t'44',\r\n\t\t\t3,\r\n\t\t\t[1534]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Jordan (‫الأردن‬‎)',\r\n\t\t\tCountryISO.Jordan,\r\n\t\t\t'962'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Kazakhstan (Казахстан)',\r\n\t\t\tCountryISO.Kazakhstan,\r\n\t\t\t'7',\r\n\t\t\t1\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Kenya',\r\n\t\t\tCountryISO.Kenya,\r\n\t\t\t'254'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Kiribati',\r\n\t\t\tCountryISO.Kiribati,\r\n\t\t\t'686'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Kosovo',\r\n\t\t\tCountryISO.Kosovo,\r\n\t\t\t'383'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Kuwait (‫الكويت‬‎)',\r\n\t\t\tCountryISO.Kuwait,\r\n\t\t\t'965'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Kyrgyzstan (Кыргызстан)',\r\n\t\t\tCountryISO.Kyrgyzstan,\r\n\t\t\t'996'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Laos (ລາວ)',\r\n\t\t\tCountryISO.Laos,\r\n\t\t\t'856'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Latvia (Latvija)',\r\n\t\t\tCountryISO.Latvia,\r\n\t\t\t'371'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Lebanon (‫لبنان‬‎)',\r\n\t\t\tCountryISO.Lebanon,\r\n\t\t\t'961'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Lesotho',\r\n\t\t\tCountryISO.Lesotho,\r\n\t\t\t'266'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Liberia',\r\n\t\t\tCountryISO.Liberia,\r\n\t\t\t'231'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Libya (‫ليبيا‬‎)',\r\n\t\t\tCountryISO.Libya,\r\n\t\t\t'218'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Liechtenstein',\r\n\t\t\tCountryISO.Liechtenstein,\r\n\t\t\t'423'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Lithuania (Lietuva)',\r\n\t\t\tCountryISO.Lithuania,\r\n\t\t\t'370'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Luxembourg',\r\n\t\t\tCountryISO.Luxembourg,\r\n\t\t\t'352'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Macau (澳門)',\r\n\t\t\tCountryISO.Macau,\r\n\t\t\t'853'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Macedonia (FYROM) (Македонија)',\r\n\t\t\tCountryISO.Macedonia,\r\n\t\t\t'389'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Madagascar (Madagasikara)',\r\n\t\t\tCountryISO.Madagascar,\r\n\t\t\t'261'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Malawi',\r\n\t\t\tCountryISO.Malawi,\r\n\t\t\t'265'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Malaysia',\r\n\t\t\tCountryISO.Malaysia,\r\n\t\t\t'60'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Maldives',\r\n\t\t\tCountryISO.Maldives,\r\n\t\t\t'960'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Mali',\r\n\t\t\tCountryISO.Mali,\r\n\t\t\t'223'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Malta',\r\n\t\t\tCountryISO.Malta,\r\n\t\t\t'356'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Marshall Islands',\r\n\t\t\tCountryISO.MarshallIslands,\r\n\t\t\t'692'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Martinique',\r\n\t\t\tCountryISO.Martinique,\r\n\t\t\t'596'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Mauritania (‫موريتانيا‬‎)',\r\n\t\t\tCountryISO.Mauritania,\r\n\t\t\t'222'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Mauritius (Moris)',\r\n\t\t\tCountryISO.Mauritius,\r\n\t\t\t'230'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Mayotte',\r\n\t\t\tCountryISO.Mayotte,\r\n\t\t\t'262',\r\n\t\t\t1\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Mexico (México)',\r\n\t\t\tCountryISO.Mexico,\r\n\t\t\t'52'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Micronesia',\r\n\t\t\tCountryISO.Micronesia,\r\n\t\t\t'691'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Moldova (Republica Moldova)',\r\n\t\t\tCountryISO.Moldova,\r\n\t\t\t'373'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Monaco',\r\n\t\t\tCountryISO.Monaco,\r\n\t\t\t'377'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Mongolia (Монгол)',\r\n\t\t\tCountryISO.Mongolia,\r\n\t\t\t'976'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Montenegro (Crna Gora)',\r\n\t\t\tCountryISO.Montenegro,\r\n\t\t\t'382'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Montserrat',\r\n\t\t\t'ms',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'664',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Morocco (‫المغرب‬‎)',\r\n\t\t\tCountryISO.Morocco,\r\n\t\t\t'212',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Mozambique (Moçambique)',\r\n\t\t\tCountryISO.Mozambique,\r\n\t\t\t'258'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Myanmar (Burma) (မြန်မာ)',\r\n\t\t\tCountryISO.Myanmar,\r\n\t\t\t'95'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Namibia (Namibië)',\r\n\t\t\tCountryISO.Namibia,\r\n\t\t\t'264'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Nauru',\r\n\t\t\tCountryISO.Nauru,\r\n\t\t\t'674'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Nepal (नेपाल)',\r\n\t\t\tCountryISO.Nepal,\r\n\t\t\t'977'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Netherlands (Nederland)',\r\n\t\t\tCountryISO.Netherlands,\r\n\t\t\t'31'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'New Caledonia (Nouvelle-Calédonie)',\r\n\t\t\tCountryISO.NewCaledonia,\r\n\t\t\t'687'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'New Zealand',\r\n\t\t\tCountryISO.NewZealand,\r\n\t\t\t'64'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Nicaragua',\r\n\t\t\tCountryISO.Nicaragua,\r\n\t\t\t'505'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Niger (Nijar)',\r\n\t\t\tCountryISO.Niger,\r\n\t\t\t'227'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Nigeria',\r\n\t\t\tCountryISO.Nigeria,\r\n\t\t\t'234'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Niue',\r\n\t\t\tCountryISO.Niue,\r\n\t\t\t'683'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Norfolk Island',\r\n\t\t\tCountryISO.NorfolkIsland,\r\n\t\t\t'672'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'North Korea (조선 민주주의 인민 공화국)',\r\n\t\t\tCountryISO.NorthKorea,\r\n\t\t\t'850'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Northern Mariana Islands',\r\n\t\t\tCountryISO.NorthernMarianaIslands,\r\n\t\t\t'1670'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Norway (Norge)',\r\n\t\t\tCountryISO.Norway,\r\n\t\t\t'47',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Oman (‫عُمان‬‎)',\r\n\t\t\tCountryISO.Oman,\r\n\t\t\t'968'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Pakistan (‫پاکستان‬‎)',\r\n\t\t\tCountryISO.Pakistan,\r\n\t\t\t'92'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Palau',\r\n\t\t\tCountryISO.Palau,\r\n\t\t\t'680'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Palestine (‫فلسطين‬‎)',\r\n\t\t\tCountryISO.Palestine,\r\n\t\t\t'970'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Panama (Panamá)',\r\n\t\t\tCountryISO.Panama,\r\n\t\t\t'507'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Papua New Guinea',\r\n\t\t\tCountryISO.PapuaNewGuinea,\r\n\t\t\t'675'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Paraguay',\r\n\t\t\tCountryISO.Paraguay,\r\n\t\t\t'595'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Peru (Perú)',\r\n\t\t\tCountryISO.Peru,\r\n\t\t\t'51'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Philippines',\r\n\t\t\tCountryISO.Philippines,\r\n\t\t\t'63'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Poland (Polska)',\r\n\t\t\tCountryISO.Poland,\r\n\t\t\t'48'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Portugal',\r\n\t\t\tCountryISO.Portugal,\r\n\t\t\t'351'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Puerto Rico',\r\n\t\t\tCountryISO.PuertoRico,\r\n\t\t\t'1',\r\n\t\t\t3,\r\n\t\t\t['787', '939']\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Qatar (‫قطر‬‎)',\r\n\t\t\tCountryISO.Qatar,\r\n\t\t\t'974'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Réunion (La Réunion)',\r\n\t\t\tCountryISO.Réunion,\r\n\t\t\t'262',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Romania (România)',\r\n\t\t\tCountryISO.Romania,\r\n\t\t\t'40'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Russia (Россия)',\r\n\t\t\tCountryISO.Russia,\r\n\t\t\t'7',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Rwanda',\r\n\t\t\tCountryISO.Rwanda,\r\n\t\t\t'250'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Saint Barthélemy (Saint-Barthélemy)',\r\n\t\t\tCountryISO.SaintBarthélemy,\r\n\t\t\t'590',\r\n\t\t\t1\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Saint Helena',\r\n\t\t\tCountryISO.SaintHelena,\r\n\t\t\t'290'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Saint Kitts and Nevis',\r\n\t\t\tCountryISO.SaintKittsAndNevis,\r\n\t\t\t'1869'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Saint Lucia',\r\n\t\t\t'lc',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'758',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Saint Martin (Saint-Martin (partie française))',\r\n\t\t\tCountryISO.SaintMartin,\r\n\t\t\t'590',\r\n\t\t\t2\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)',\r\n\t\t\tCountryISO.SaintPierreAndMiquelon,\r\n\t\t\t'508'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Saint Vincent and the Grenadines',\r\n\t\t\t'vc',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'784',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Samoa',\r\n\t\t\tCountryISO.Samoa,\r\n\t\t\t'685'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'San Marino',\r\n\t\t\tCountryISO.SanMarino,\r\n\t\t\t'378'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'São Tomé and Príncipe (São Tomé e Príncipe)',\r\n\t\t\tCountryISO.SãoToméAndPríncipe,\r\n\t\t\t'239'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Saudi Arabia (‫المملكة العربية السعودية‬‎)',\r\n\t\t\tCountryISO.SaudiArabia,\r\n\t\t\t'966'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Senegal (Sénégal)',\r\n\t\t\tCountryISO.Senegal,\r\n\t\t\t'221'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Serbia (Србија)',\r\n\t\t\tCountryISO.Serbia,\r\n\t\t\t'381'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Seychelles',\r\n\t\t\tCountryISO.Seychelles,\r\n\t\t\t'248'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Sierra Leone',\r\n\t\t\tCountryISO.SierraLeone,\r\n\t\t\t'232'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Singapore',\r\n\t\t\tCountryISO.Singapore,\r\n\t\t\t'65'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Sint Maarten',\r\n\t\t\t'sx',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'721',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Slovakia (Slovensko)',\r\n\t\t\tCountryISO.Slovakia,\r\n\t\t\t'421'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Slovenia (Slovenija)',\r\n\t\t\tCountryISO.Slovenia,\r\n\t\t\t'386'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Solomon Islands',\r\n\t\t\tCountryISO.SolomonIslands,\r\n\t\t\t'677'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Somalia (Soomaaliya)',\r\n\t\t\tCountryISO.Somalia,\r\n\t\t\t'252'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'South Africa',\r\n\t\t\tCountryISO.SouthAfrica,\r\n\t\t\t'27'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'South Korea (대한민국)',\r\n\t\t\tCountryISO.SouthKorea,\r\n\t\t\t'82'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'South Sudan (‫جنوب السودان‬‎)',\r\n\t\t\tCountryISO.SouthSudan,\r\n\t\t\t'211'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Spain (España)',\r\n\t\t\tCountryISO.Spain,\r\n\t\t\t'34'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Sri Lanka (ශ්‍රී ලංකාව)',\r\n\t\t\tCountryISO.SriLanka,\r\n\t\t\t'94'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Sudan (‫السودان‬‎)',\r\n\t\t\tCountryISO.Sudan,\r\n\t\t\t'249'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Suriname',\r\n\t\t\tCountryISO.Suriname,\r\n\t\t\t'597'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Svalbard and Jan Mayen',\r\n\t\t\tCountryISO.SvalbardAndJanMayen,\r\n\t\t\t'47',\r\n\t\t\t1\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Swaziland',\r\n\t\t\tCountryISO.Swaziland,\r\n\t\t\t'268'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Sweden (Sverige)',\r\n\t\t\tCountryISO.Sweden,\r\n\t\t\t'46'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Switzerland (Schweiz)',\r\n\t\t\tCountryISO.Switzerland,\r\n\t\t\t'41'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Syria (‫سوريا‬‎)',\r\n\t\t\tCountryISO.Syria,\r\n\t\t\t'963'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Taiwan (台灣)',\r\n\t\t\tCountryISO.Taiwan,\r\n\t\t\t'886'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Tajikistan',\r\n\t\t\tCountryISO.Tajikistan,\r\n\t\t\t'992'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Tanzania',\r\n\t\t\tCountryISO.Tanzania,\r\n\t\t\t'255'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Thailand (ไทย)',\r\n\t\t\tCountryISO.Thailand,\r\n\t\t\t'66'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Timor-Leste',\r\n\t\t\tCountryISO.TimorLeste,\r\n\t\t\t'670'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Togo',\r\n\t\t\tCountryISO.Togo,\r\n\t\t\t'228'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Tokelau',\r\n\t\t\tCountryISO.Tokelau,\r\n\t\t\t'690'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Tonga',\r\n\t\t\tCountryISO.Tonga,\r\n\t\t\t'676'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Trinidad and Tobago',\r\n\t\t\t'tt',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'868',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Tunisia (‫تونس‬‎)',\r\n\t\t\tCountryISO.Tunisia,\r\n\t\t\t'216'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Turkey (Türkiye)',\r\n\t\t\tCountryISO.Turkey,\r\n\t\t\t'90'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Turkmenistan',\r\n\t\t\tCountryISO.Turkmenistan,\r\n\t\t\t'993'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Turks and Caicos Islands',\r\n\t\t\tCountryISO.TurksAndCaicosIslands,\r\n\t\t\t'1649'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Tuvalu',\r\n\t\t\tCountryISO.Tuvalu,\r\n\t\t\t'688'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'U.S. Virgin Islands',\r\n\t\t\t'vi',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'340',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Uganda',\r\n\t\t\tCountryISO.Uganda,\r\n\t\t\t'256'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Ukraine (Україна)',\r\n\t\t\tCountryISO.Ukraine,\r\n\t\t\t'380'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'United Arab Emirates (‫الإمارات العربية المتحدة‬‎)',\r\n\t\t\tCountryISO.UnitedArabEmirates,\r\n\t\t\t'971'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'United Kingdom',\r\n\t\t\tCountryISO.UnitedKingdom,\r\n\t\t\t'44',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'United States',\r\n\t\t\tCountryISO.UnitedStates,\r\n\t\t\t'1',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Uruguay',\r\n\t\t\tCountryISO.Uruguay,\r\n\t\t\t'598'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Uzbekistan (Oʻzbekiston)',\r\n\t\t\tCountryISO.Uzbekistan,\r\n\t\t\t'998'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Vanuatu',\r\n\t\t\tCountryISO.Vanuatu,\r\n\t\t\t'678'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Vatican City (Città del Vaticano)',\r\n\t\t\tCountryISO.VaticanCity,\r\n\t\t\t'39',\r\n\t\t\t1\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Venezuela',\r\n\t\t\tCountryISO.Venezuela,\r\n\t\t\t'58'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Vietnam (Việt Nam)',\r\n\t\t\tCountryISO.Vietnam,\r\n\t\t\t'84'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Wallis and Futuna',\r\n\t\t\tCountryISO.WallisAndFutuna,\r\n\t\t\t'681'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Western Sahara (‫الصحراء الغربية‬‎)',\r\n\t\t\tCountryISO.WesternSahara,\r\n\t\t\t'212',\r\n\t\t\t1\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Yemen (‫اليمن‬‎)',\r\n\t\t\tCountryISO.Yemen,\r\n\t\t\t'967'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Zambia',\r\n\t\t\tCountryISO.Zambia,\r\n\t\t\t'260'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Zimbabwe',\r\n\t\t\tCountryISO.Zimbabwe,\r\n\t\t\t'263'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Åland Islands',\r\n\t\t\tCountryISO.ÅlandIslands,\r\n\t\t\t'358',\r\n\t\t\t1\r\n\t\t]\r\n\t];\r\n}","export enum SearchCountryField {\r\n\tDialCode = 'dialCode',\r\n\tIso2 = 'iso2',\r\n\tName = 'name',\r\n\tAll = 'all'\r\n}\r\n","import * as lpn from 'google-libphonenumber';\r\n\r\n/*\r\nWe use \"control: any\" instead of \"control: FormControl\" to silence:\r\n\"Property 'nativeElement' does not exist on type 'FormControl'\".\r\nThis happens because I've expanded control with nativeElement via\r\n'NativeElementInjectorDirective' to get an access to the element.\r\nMore about this approach and reasons for this:\r\nhttps://github.com/angular/angular/issues/18025\r\nhttps://stackoverflow.com/a/54075119/1617590\r\n*/\r\nexport const phoneNumberValidator = (control: any) => {\r\n\tif (!control.value) {\r\n\t\treturn;\r\n\t}\r\n\t// Find <input> inside injected nativeElement and get its \"id\".\r\n\tconst el: HTMLElement = control.nativeElement as HTMLElement;\r\n\tconst inputBox: HTMLInputElement | any = el\r\n\t\t? el.querySelector('input[type=\"tel\"]')\r\n\t\t: undefined;\r\n\tif (inputBox) {\r\n\t\tconst id = inputBox.id;\r\n\t\tconst isCheckValidation = inputBox.getAttribute('validation');\r\n\t\tif (isCheckValidation === 'true') {\r\n\t\t\tconst isRequired = control.errors && control.errors.required === true;\r\n\t\t\tconst error = { validatePhoneNumber: { valid: false } };\r\n\r\n\t\t\tinputBox.setCustomValidity('Invalid field.');\r\n\r\n\t\t\tlet number: lpn.PhoneNumber;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tnumber = lpn.PhoneNumberUtil.getInstance().parse(\r\n\t\t\t\t\tcontrol.value.number,\r\n\t\t\t\t\tcontrol.value.countryCode\r\n\t\t\t\t);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tif (isRequired) {\r\n\t\t\t\t\treturn error;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinputBox.setCustomValidity('');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (control.value) {\r\n\t\t\t\t// @ts-ignore\r\n        if (!number) {\r\n\t\t\t\t\treturn error;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t!lpn.PhoneNumberUtil.getInstance().isValidNumberForRegion(\r\n\t\t\t\t\t\t\tnumber,\r\n\t\t\t\t\t\t\tcontrol.value.countryCode\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\treturn error;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tinputBox.setCustomValidity('');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (isCheckValidation === 'false') {\r\n\t\t\tinputBox.setCustomValidity('');\r\n\r\n\t\t\tcontrol.clearValidators();\r\n\t\t}\r\n\t}\r\n\treturn;\r\n};\r\n","export enum PhoneNumberFormat {\r\n\tInternational = 'INTERNATIONAL',\r\n\tNational = 'NATIONAL',\r\n}\r\n","import { Directive, ElementRef, OnInit } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n/*\r\n\"Property 'nativeElement' does not exist on type 'FormControl'\".\r\n'NativeElementInjectorDirective' injects nativeElement to each control,\r\nso we can access it from inside validator for example.\r\nMore about this approach and reasons for this:\r\nhttps://github.com/angular/angular/issues/18025\r\nhttps://stackoverflow.com/a/54075119/1617590\r\n*/\r\n@Directive({\r\n\t// tslint:disable-next-line: directive-selector\r\n\tselector: '[ngModel], [formControl], [formControlName]',\r\n})\r\nexport class NativeElementInjectorDirective implements OnInit {\r\n\tconstructor(\r\n\t\tprivate controlDir: NgControl,\r\n\t\tprivate host: ElementRef<HTMLFormElement>\r\n\t) {}\r\n\tngOnInit() {\r\n\t\tif (this.controlDir.control) {\r\n\t\t\t// @ts-ignore\r\n      this.controlDir.control['nativeElement'] = this.host.nativeElement;\r\n\t\t}\r\n\t}\r\n}\r\n","<div class=\"iti iti--allow-dropdown\"\r\n\t[ngClass]=\"separateDialCodeClass\">\r\n\t<div class=\"iti__flag-container\"\r\n\t\tdropdown\r\n\t\t[ngClass]=\"{'disabled': disabled}\"\r\n\t\t[isDisabled]=\"disabled\">\r\n\t\t<div class=\"iti__selected-flag dropdown-toggle\"\r\n\t\t\tdropdownToggle>\r\n\t\t\t<div class=\"iti__flag\"\r\n\t\t\t\t[ngClass]=\"selectedCountry?.flagClass || ''\"></div>\r\n\t\t\t<div *ngIf=\"separateDialCode\"\r\n\t\t\t\tclass=\"selected-dial-code\">+{{selectedCountry.dialCode}}</div>\r\n\t\t\t<div class=\"iti__arrow\"></div>\r\n\t\t</div>\r\n\t\t<div *dropdownMenu\r\n\t\t\tclass=\"dropdown-menu country-dropdown\">\r\n\t\t\t<div class=\"search-container\"\r\n\t\t\t\t*ngIf=\"searchCountryFlag && searchCountryField\">\r\n\t\t\t\t<input id=\"country-search-box\"\r\n\t\t\t\t\t[(ngModel)]=\"countrySearchText\"\r\n\t\t\t\t\t(keyup)=\"searchCountry()\"\r\n\t\t\t\t\t(click)=\"$event.stopPropagation()\"\r\n\t\t\t\t\t[placeholder]=\"searchCountryPlaceholder\"\r\n\t\t\t\t\tautofocus>\r\n\t\t\t</div>\r\n\t\t\t<ul class=\"iti__country-list\"\r\n\t\t\t\t#countryList>\r\n\t\t\t\t<li class=\"iti__country iti__preferred\"\r\n\t\t\t\t\t*ngFor=\"let country of preferredCountriesInDropDown\"\r\n\t\t\t\t\t(click)=\"onCountrySelect(country, focusable)\"\r\n\t\t\t\t\t[id]=\"country.htmlId+'-preferred'\">\r\n\t\t\t\t\t<div class=\"iti__flag-box\">\r\n\t\t\t\t\t\t<div class=\"iti__flag\"\r\n\t\t\t\t\t\t\t[ngClass]=\"country.flagClass\"></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span class=\"iti__country-name\">{{country.name}}</span>\r\n\t\t\t\t\t<span class=\"iti__dial-code\">+{{country.dialCode}}</span>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li class=\"iti__divider\"\r\n\t\t\t\t\t*ngIf=\"preferredCountriesInDropDown?.length\"></li>\r\n\t\t\t\t<li class=\"iti__country iti__standard\"\r\n\t\t\t\t\t*ngFor=\"let country of allCountries\"\r\n\t\t\t\t\t(click)=\"onCountrySelect(country, focusable)\"\r\n\t\t\t\t\t[id]=\"country.htmlId\">\r\n\t\t\t\t\t<div class=\"iti__flag-box\">\r\n\t\t\t\t\t\t<div class=\"iti__flag\"\r\n\t\t\t\t\t\t\t[ngClass]=\"country.flagClass\"></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span class=\"iti__country-name\">{{country.name}}</span>\r\n\t\t\t\t\t<span class=\"iti__dial-code\">+{{country.dialCode}}</span>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</div>\r\n\t<input type=\"tel\"\r\n\t\t[id]=\"inputId\"\r\n\t\tautocomplete=\"off\"\r\n\t\t[ngClass]=\"cssClass\"\r\n\t\t(blur)=\"onTouched()\"\r\n\t\t(keypress)=\"onInputKeyPress($event)\"\r\n\t\t[(ngModel)]=\"phoneNumber\"\r\n\t\t(ngModelChange)=\"onPhoneNumberChange()\"\r\n\t\t[disabled]=\"disabled\"\r\n\t\t[placeholder]=\"resolvePlaceholder()\"\r\n\t\t[attr.maxLength]=\"maxLength\"\r\n\t\t[attr.validation]=\"phoneValidation\"\r\n\t\t#focusable>\r\n</div>\r\n","import * as lpn from 'google-libphonenumber';\r\n\r\nimport {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { setTheme } from 'ngx-bootstrap/utils';\r\n\r\nimport { CountryCode } from './data/country-code';\r\nimport { CountryISO } from './enums/country-iso.enum';\r\nimport { SearchCountryField } from './enums/search-country-field.enum';\r\nimport { ChangeData } from './interfaces/change-data';\r\nimport { Country } from './model/country.model';\r\nimport { phoneNumberValidator } from './vx-itel.validator';\r\nimport { PhoneNumberFormat } from './enums/phone-number-format.enum';\r\n\r\n@Component({\r\n  // tslint:disable-next-line: component-selector\r\n  selector: 'vx-itel',\r\n  templateUrl: './vx-itel.component.html',\r\n  styleUrls: ['./bootstrap-dropdown.css', './vx-itel.component.css'],\r\n  providers: [\r\n    CountryCode,\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      // tslint:disable-next-line:no-forward-ref\r\n      useExisting: forwardRef(() => VxITelComponent),\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useValue: phoneNumberValidator,\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class VxITelComponent implements OnInit, OnChanges {\r\n  @Input() value: string | undefined = '';\r\n  @Input() preferredCountries: Array<string> = [];\r\n  @Input() enablePlaceholder = true;\r\n  @Input() customPlaceholder: string;\r\n  @Input() numberFormat: PhoneNumberFormat = PhoneNumberFormat.International;\r\n  @Input() cssClass = 'form-control';\r\n  @Input() onlyCountries: Array<string> = [];\r\n  @Input() enableAutoCountrySelect = true;\r\n  @Input() searchCountryFlag = false;\r\n  @Input() searchCountryField: SearchCountryField[] = [SearchCountryField.All];\r\n  @Input() searchCountryPlaceholder = 'Search Country';\r\n  @Input() maxLength: number;\r\n  @Input() selectFirstCountry = true;\r\n  @Input() selectedCountryISO: CountryISO;\r\n  @Input() phoneValidation = true;\r\n  @Input() inputId = 'phone';\r\n  @Input() separateDialCode = false;\r\n  separateDialCodeClass: string;\r\n\r\n  @Output() readonly countryChange = new EventEmitter<Country>();\r\n\r\n  selectedCountry: Country = {\r\n    areaCodes: undefined,\r\n    dialCode: '',\r\n    htmlId: '',\r\n    flagClass: '',\r\n    iso2: '',\r\n    name: '',\r\n    placeHolder: '',\r\n    priority: 0,\r\n  };\r\n\r\n  phoneNumber: string | undefined = '';\r\n  allCountries: Array<Country> = [];\r\n  preferredCountriesInDropDown: Array<Country> = [];\r\n  // Has to be 'any' to prevent a need to install @types/google-libphonenumber by the package user...\r\n  phoneUtil: any = lpn.PhoneNumberUtil.getInstance();\r\n  disabled = false;\r\n  errors: Array<any> = ['Phone number is required.'];\r\n  countrySearchText = '';\r\n\r\n  @ViewChild('countryList') countryList: ElementRef;\r\n\r\n  onTouched = () => {};\r\n  propagateChange = (_: ChangeData) => {};\r\n\r\n  constructor(private countryCodeData: CountryCode) {\r\n    // If this is not set, ngx-bootstrap will try to use the bs3 CSS (which is not what we've embedded) and will\r\n    // Add the wrong classes and such\r\n    setTheme('bs4');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.init();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const selectedISO = changes['selectedCountryISO'];\r\n    if (\r\n      this.allCountries &&\r\n      selectedISO &&\r\n      selectedISO.currentValue !== selectedISO.previousValue\r\n    ) {\r\n      this.updateSelectedCountry();\r\n    }\r\n    if (changes['preferredCountries']) {\r\n      this.updatePreferredCountries();\r\n    }\r\n    this.checkSeparateDialCodeStyle();\r\n  }\r\n\r\n  /*\r\n\t\tThis is a wrapper method to avoid calling this.ngOnInit() in writeValue().\r\n\t\tRef: http://codelyzer.com/rules/no-life-cycle-call/\r\n\t*/\r\n  init() {\r\n    this.fetchCountryData();\r\n    if (this.preferredCountries.length) {\r\n      this.updatePreferredCountries();\r\n    }\r\n    if (this.onlyCountries.length) {\r\n      this.allCountries = this.allCountries.filter((c) =>\r\n        this.onlyCountries.includes(c.iso2)\r\n      );\r\n    }\r\n    if (this.selectFirstCountry) {\r\n      if (this.preferredCountriesInDropDown.length) {\r\n        this.setSelectedCountry(this.preferredCountriesInDropDown[0]);\r\n      } else {\r\n        this.setSelectedCountry(this.allCountries[0]);\r\n      }\r\n    }\r\n    this.updateSelectedCountry();\r\n    this.checkSeparateDialCodeStyle();\r\n  }\r\n\r\n  setSelectedCountry(country: Country) {\r\n    this.selectedCountry = country;\r\n    this.countryChange.emit(country);\r\n  }\r\n\r\n  /**\r\n   * Search country based on country name, iso2, dialCode or all of them.\r\n   */\r\n  public searchCountry() {\r\n    if (!this.countrySearchText) {\r\n      this.countryList.nativeElement\r\n        .querySelector('.iti__country-list li')\r\n        .scrollIntoView({\r\n          behavior: 'smooth',\r\n          block: 'nearest',\r\n          inline: 'nearest',\r\n        });\r\n      return;\r\n    }\r\n    const countrySearchTextLower = this.countrySearchText.toLowerCase();\r\n    // @ts-ignore\r\n    const country = this.allCountries.filter((c) => {\r\n      if (this.searchCountryField.indexOf(SearchCountryField.All) > -1) {\r\n        // Search in all fields\r\n        if (c.iso2.toLowerCase().startsWith(countrySearchTextLower)) {\r\n          return c;\r\n        }\r\n        if (c.name.toLowerCase().startsWith(countrySearchTextLower)) {\r\n          return c;\r\n        }\r\n        if (c.dialCode.startsWith(this.countrySearchText)) {\r\n          return c;\r\n        }\r\n      } else {\r\n        // Or search by specific SearchCountryField(s)\r\n        if (this.searchCountryField.indexOf(SearchCountryField.Iso2) > -1) {\r\n          if (c.iso2.toLowerCase().startsWith(countrySearchTextLower)) {\r\n            return c;\r\n          }\r\n        }\r\n        if (this.searchCountryField.indexOf(SearchCountryField.Name) > -1) {\r\n          if (c.name.toLowerCase().startsWith(countrySearchTextLower)) {\r\n            return c;\r\n          }\r\n        }\r\n        if (this.searchCountryField.indexOf(SearchCountryField.DialCode) > -1) {\r\n          if (c.dialCode.startsWith(this.countrySearchText)) {\r\n            return c;\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    if (country.length > 0) {\r\n      const el = this.countryList.nativeElement.querySelector(\r\n        '#' + country[0].htmlId\r\n      );\r\n      if (el) {\r\n        el.scrollIntoView({\r\n          behavior: 'smooth',\r\n          block: 'nearest',\r\n          inline: 'nearest',\r\n        });\r\n      }\r\n    }\r\n\r\n    this.checkSeparateDialCodeStyle();\r\n  }\r\n\r\n  public onPhoneNumberChange(): void {\r\n    let countryCode: string | undefined;\r\n    // Handle the case where the user sets the value programatically based on a persisted ChangeData obj.\r\n    if (this.phoneNumber && typeof this.phoneNumber === 'object') {\r\n      const numberObj: ChangeData = this.phoneNumber;\r\n      this.phoneNumber = numberObj.number;\r\n      countryCode = numberObj.countryCode;\r\n    }\r\n\r\n    this.value = this.phoneNumber;\r\n    countryCode = countryCode || this.selectedCountry.iso2;\r\n    // @ts-ignore\r\n    const number = this.getParsedNumber(this.phoneNumber, countryCode);\r\n\r\n    // auto select country based on the extension (and areaCode if needed) (e.g select Canada if number starts with +1 416)\r\n    if (this.enableAutoCountrySelect) {\r\n      countryCode =\r\n        number && number.getCountryCode()\r\n          ? // @ts-ignore\r\n            this.getCountryIsoCode(number.getCountryCode(), number)\r\n          : this.selectedCountry.iso2;\r\n      if (countryCode && countryCode !== this.selectedCountry.iso2) {\r\n        const newCountry = this.allCountries\r\n          .sort((a, b) => {\r\n            return a.priority - b.priority;\r\n          })\r\n          .find((c) => c.iso2 === countryCode);\r\n        if (newCountry) {\r\n          this.selectedCountry = newCountry;\r\n        }\r\n      }\r\n    }\r\n    countryCode = countryCode ? countryCode : this.selectedCountry.iso2;\r\n\r\n    this.checkSeparateDialCodeStyle();\r\n\r\n    if (!this.value) {\r\n      // Reason: avoid https://stackoverflow.com/a/54358133/1617590\r\n      // tslint:disable-next-line: no-null-keyword\r\n      // @ts-ignore\r\n      this.propagateChange(null);\r\n    } else {\r\n      const intlNo = number\r\n        ? this.phoneUtil.format(number, lpn.PhoneNumberFormat.INTERNATIONAL)\r\n        : '';\r\n\r\n      // parse phoneNumber if separate dial code is needed\r\n      if (this.separateDialCode && intlNo) {\r\n        this.value = this.removeDialCode(intlNo);\r\n      }\r\n\r\n      this.propagateChange({\r\n        number: this.value,\r\n        internationalNumber: intlNo,\r\n        nationalNumber: number\r\n          ? this.phoneUtil.format(number, lpn.PhoneNumberFormat.NATIONAL)\r\n          : '',\r\n        e164Number: number\r\n          ? this.phoneUtil.format(number, lpn.PhoneNumberFormat.E164)\r\n          : '',\r\n        countryCode: countryCode.toUpperCase(),\r\n        dialCode: '+' + this.selectedCountry.dialCode,\r\n      });\r\n    }\r\n  }\r\n\r\n  public onCountrySelect(country: Country, el: { focus: () => void }): void {\r\n    this.setSelectedCountry(country);\r\n\r\n    this.checkSeparateDialCodeStyle();\r\n\r\n    if (this.phoneNumber && this.phoneNumber.length > 0) {\r\n      this.value = this.phoneNumber;\r\n      const number = this.getParsedNumber(\r\n        this.phoneNumber,\r\n        this.selectedCountry.iso2\r\n      );\r\n      const intlNo = number\r\n        ? this.phoneUtil.format(number, lpn.PhoneNumberFormat.INTERNATIONAL)\r\n        : '';\r\n      // parse phoneNumber if separate dial code is needed\r\n      if (this.separateDialCode && intlNo) {\r\n        this.value = this.removeDialCode(intlNo);\r\n      }\r\n\r\n      this.propagateChange({\r\n        number: this.value,\r\n        internationalNumber: intlNo,\r\n        nationalNumber: number\r\n          ? this.phoneUtil.format(number, lpn.PhoneNumberFormat.NATIONAL)\r\n          : '',\r\n        e164Number: number\r\n          ? this.phoneUtil.format(number, lpn.PhoneNumberFormat.E164)\r\n          : '',\r\n        countryCode: this.selectedCountry.iso2.toUpperCase(),\r\n        dialCode: '+' + this.selectedCountry.dialCode,\r\n      });\r\n    } else {\r\n      // Reason: avoid https://stackoverflow.com/a/54358133/1617590\r\n      // tslint:disable-next-line: no-null-keyword\r\n      // @ts-ignore\r\n      this.propagateChange(null);\r\n    }\r\n\r\n    el.focus();\r\n  }\r\n\r\n  public onInputKeyPress(event: KeyboardEvent): void {\r\n    const allowedChars = /[0-9\\+\\-\\(\\)\\ ]/;\r\n    const allowedCtrlChars = /[axcv]/; // Allows copy-pasting\r\n    const allowedOtherKeys = [\r\n      'ArrowLeft',\r\n      'ArrowUp',\r\n      'ArrowRight',\r\n      'ArrowDown',\r\n      'Home',\r\n      'End',\r\n      'Insert',\r\n      'Delete',\r\n      'Backspace',\r\n    ];\r\n\r\n    if (\r\n      !allowedChars.test(event.key) &&\r\n      !(event.ctrlKey && allowedCtrlChars.test(event.key)) &&\r\n      !allowedOtherKeys.includes(event.key)\r\n    ) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.propagateChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any) {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n    if (obj === undefined) {\r\n      this.init();\r\n    }\r\n    this.phoneNumber = obj;\r\n    setTimeout(() => {\r\n      this.onPhoneNumberChange();\r\n    }, 1);\r\n  }\r\n\r\n  resolvePlaceholder(): string {\r\n    let placeholder = '';\r\n    if (this.customPlaceholder) {\r\n      placeholder = this.customPlaceholder;\r\n    } else if (this.selectedCountry.placeHolder) {\r\n      placeholder = this.selectedCountry.placeHolder;\r\n      if (this.separateDialCode) {\r\n        placeholder = this.removeDialCode(placeholder);\r\n      }\r\n    }\r\n    return placeholder;\r\n  }\r\n\r\n  /* --------------------------------- Helpers -------------------------------- */\r\n  /**\r\n   * Returns parse PhoneNumber object.\r\n   * @param phoneNumber string\r\n   * @param countryCode string\r\n   */\r\n  private getParsedNumber(\r\n    phoneNumber: string,\r\n    countryCode: string\r\n  ): lpn.PhoneNumber {\r\n    let number: lpn.PhoneNumber;\r\n    try {\r\n      number = this.phoneUtil.parse(phoneNumber, countryCode.toUpperCase());\r\n    } catch (e) {}\r\n    // @ts-ignore\r\n    return number;\r\n  }\r\n\r\n  /**\r\n   * Adjusts input alignment based on the dial code presentation style.\r\n   */\r\n  private checkSeparateDialCodeStyle() {\r\n    if (this.separateDialCode && this.selectedCountry) {\r\n      const cntryCd = this.selectedCountry.dialCode;\r\n      this.separateDialCodeClass =\r\n        'separate-dial-code iti-sdc-' + (cntryCd.length + 1);\r\n    } else {\r\n      this.separateDialCodeClass = '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cleans dialcode from phone number string.\r\n   * @param phoneNumber string\r\n   */\r\n  private removeDialCode(phoneNumber: string): string {\r\n    const number = this.getParsedNumber(phoneNumber, this.selectedCountry.iso2);\r\n    phoneNumber = this.phoneUtil.format(\r\n      number,\r\n      lpn.PhoneNumberFormat[this.numberFormat]\r\n    );\r\n    if (phoneNumber.startsWith('+') && this.separateDialCode) {\r\n      phoneNumber = phoneNumber.substr(phoneNumber.indexOf(' ') + 1);\r\n    }\r\n    return phoneNumber;\r\n  }\r\n\r\n  /**\r\n   * Sifts through all countries and returns iso code of the primary country\r\n   * based on the number provided.\r\n   * @param countryCode country code in number format\r\n   * @param number PhoneNumber object\r\n   */\r\n  private getCountryIsoCode(\r\n    countryCode: number,\r\n    number: lpn.PhoneNumber\r\n  ): string | undefined {\r\n    // Will use this to match area code from the first numbers\r\n    // @ts-ignore\r\n    const rawNumber = number['values_']['2'].toString();\r\n    // List of all countries with countryCode (can be more than one. e.x. US, CA, DO, PR all have +1 countryCode)\r\n    const countries = this.allCountries.filter(\r\n      (c) => c.dialCode === countryCode.toString()\r\n    );\r\n    // Main country is the country, which has no areaCodes specified in country-code.ts file.\r\n    const mainCountry = countries.find((c) => c.areaCodes === undefined);\r\n    // Secondary countries are all countries, which have areaCodes specified in country-code.ts file.\r\n    const secondaryCountries = countries.filter(\r\n      (c) => c.areaCodes !== undefined\r\n    );\r\n    let matchedCountry = mainCountry ? mainCountry.iso2 : undefined;\r\n\r\n    /*\r\n\t\t\tIterate over each secondary country and check if nationalNumber starts with any of areaCodes available.\r\n\t\t\tIf no matches found, fallback to the main country.\r\n\t\t*/\r\n    secondaryCountries.forEach((country) => {\r\n      // @ts-ignore\r\n      country.areaCodes.forEach((areaCode) => {\r\n        if (rawNumber.startsWith(areaCode)) {\r\n          matchedCountry = country.iso2;\r\n        }\r\n      });\r\n    });\r\n\r\n    return matchedCountry;\r\n  }\r\n\r\n  /**\r\n   * Gets formatted example phone number from phoneUtil.\r\n   * @param countryCode string\r\n   */\r\n  protected getPhoneNumberPlaceHolder(countryCode: string): string {\r\n    try {\r\n      return this.phoneUtil.format(\r\n        this.phoneUtil.getExampleNumber(countryCode),\r\n        lpn.PhoneNumberFormat[this.numberFormat]\r\n      );\r\n    } catch (e) {\r\n      // @ts-ignore\r\n      return e;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clearing the list to avoid duplicates (https://github.com/guillermodelagala/vx-itel/issues/248)\r\n   */\r\n  protected fetchCountryData(): void {\r\n    this.allCountries = [];\r\n\r\n    this.countryCodeData.allCountries.forEach((c) => {\r\n      const country: Country = {\r\n        name: c[0].toString(),\r\n        iso2: c[1].toString(),\r\n        dialCode: c[2].toString(),\r\n        priority: +c[3] || 0,\r\n        areaCodes: (c[4] as string[]) || undefined,\r\n        htmlId: `iti-0__item-${c[1].toString()}`,\r\n        flagClass: `iti__${c[1].toString().toLocaleLowerCase()}`,\r\n        placeHolder: '',\r\n      };\r\n\r\n      if (this.enablePlaceholder) {\r\n        country.placeHolder = this.getPhoneNumberPlaceHolder(\r\n          country.iso2.toUpperCase()\r\n        );\r\n      }\r\n\r\n      this.allCountries.push(country);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Populates preferredCountriesInDropDown with prefferred countries.\r\n   */\r\n  private updatePreferredCountries() {\r\n    if (this.preferredCountries.length) {\r\n      this.preferredCountriesInDropDown = [];\r\n      this.preferredCountries.forEach((iso2) => {\r\n        const preferredCountry = this.allCountries.filter((c) => {\r\n          return c.iso2 === iso2;\r\n        });\r\n\r\n        this.preferredCountriesInDropDown.push(preferredCountry[0]);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates selectedCountry.\r\n   */\r\n  private updateSelectedCountry() {\r\n    if (this.selectedCountryISO) {\r\n      // @ts-ignore\r\n      this.selectedCountry = this.allCountries.find((c) => {\r\n        return c.iso2.toLowerCase() === this.selectedCountryISO.toLowerCase();\r\n      });\r\n      if (this.selectedCountry) {\r\n        if (this.phoneNumber) {\r\n          this.onPhoneNumberChange();\r\n        } else {\r\n          // Reason: avoid https://stackoverflow.com/a/54358133/1617590\r\n          // tslint:disable-next-line: no-null-keyword\r\n          // @ts-ignore\r\n          this.propagateChange(null);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { NativeElementInjectorDirective } from './directives/native-element-injector.directive';\r\nimport { VxITelComponent } from './vx-itel.component';\r\n\r\nexport const dropdownModuleForRoot: ModuleWithProviders<BsDropdownModule> = BsDropdownModule.forRoot();\r\n\r\n@NgModule({\r\n\tdeclarations: [VxITelComponent, NativeElementInjectorDirective],\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tdropdownModuleForRoot,\r\n  ],\r\n\texports: [VxITelComponent, NativeElementInjectorDirective],\r\n})\r\nexport class VxITelModule {\r\n\r\n}\r\n","/*\r\n * Public API Surface of vx-itel\r\n */\r\n\r\nexport * from './lib/vx-itel.component';\r\nexport * from './lib/directives/native-element-injector.directive';\r\nexport * from './lib/vx-itel.module';\r\nexport * from './lib/enums/country-iso.enum';\r\nexport * from './lib/enums/search-country-field.enum';\r\nexport * from './lib/enums/phone-number-format.enum';\r\nexport * from './lib/interfaces/change-data';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1","i1.CountryCode"],"mappings":"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"}