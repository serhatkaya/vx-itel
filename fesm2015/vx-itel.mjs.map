{"version":3,"file":"vx-itel.mjs","sources":["../../../projects/vx-itel/src/lib/enums/country-iso.enum.ts","../../../projects/vx-itel/src/lib/data/country-code.ts","../../../projects/vx-itel/src/lib/enums/search-country-field.enum.ts","../../../projects/vx-itel/src/lib/vx-itel.validator.ts","../../../projects/vx-itel/src/lib/enums/phone-number-format.enum.ts","../../../projects/vx-itel/src/lib/directives/native-element-injector.directive.ts","../../../projects/vx-itel/src/lib/vx-itel.component.ts","../../../projects/vx-itel/src/lib/vx-itel.component.html","../../../projects/vx-itel/src/lib/vx-itel.module.ts","../../../projects/vx-itel/src/public_api.ts","../../../projects/vx-itel/src/vx-itel.ts"],"sourcesContent":["export enum CountryISO {\n\tAfghanistan = 'af',\n\tAlbania = 'al',\n\tAlgeria = 'dz',\n\tAmericanSamoa = 'as',\n\tAndorra = 'ad',\n\tAngola = 'ao',\n\tAnguilla = 'ai',\n\tAntiguaAndBarbuda = 'ag',\n\tArgentina = 'ar',\n\tArmenia = 'am',\n\tAruba = 'aw',\n\tAustralia = 'au',\n\tAustria = 'at',\n\tAzerbaijan = 'az',\n\tBahamas = 'bs',\n\tBahrain = 'bh',\n\tBangladesh = 'bd',\n\tBarbados = 'bb',\n\tBelarus = 'by',\n\tBelgium = 'be',\n\tBelize = 'bz',\n\tBenin = 'bj',\n\tBermuda = 'bm',\n\tBhutan = 'bt',\n\tBolivia = 'bo',\n\tBosniaAndHerzegovina = 'ba',\n\tBotswana = 'bw',\n\tBrazil = 'br',\n\tBritishIndianOceanTerritory = 'io',\n\tBritishVirginIslands = 'vg',\n\tBrunei = 'bn',\n\tBulgaria = 'bg',\n\tBurkinaFaso = 'bf',\n\tBurundi = 'bi',\n\tCambodia = 'kh',\n\tCameroon = 'cm',\n\tCanada = 'ca',\n\tCapeVerde = 'cv',\n\tCaribbeanNetherlands = 'bq',\n\tCaymanIslands = 'ky',\n\tCentralAfricanRepublic = 'cf',\n\tChad = 'td',\n\tChile = 'cl',\n\tChina = 'cn',\n\tChristmasIsland = 'cx',\n\tCocos = 'cc',\n\tColombia = 'co',\n\tComoros = 'km',\n\tCongoDRCJamhuriYaKidemokrasiaYaKongo = 'cd',\n\tCongoRepublicCongoBrazzaville = 'cg',\n\tCookIslands = 'ck',\n\tCostaRica = 'cr',\n\tCôteDIvoire = 'ci',\n\tCroatia = 'hr',\n\tCuba = 'cu',\n\tCuraçao = 'cw',\n\tCyprus = 'cy',\n\tCzechRepublic = 'cz',\n\tDenmark = 'dk',\n\tDjibouti = 'dj',\n\tDominica = 'dm',\n\tDominicanRepublic = 'do',\n\tEcuador = 'ec',\n\tEgypt = 'eg',\n\tElSalvador = 'sv',\n\tEquatorialGuinea = 'gq',\n\tEritrea = 'er',\n\tEstonia = 'ee',\n\tEthiopia = 'et',\n\tFalklandIslands = 'fk',\n\tFaroeIslands = 'fo',\n\tFiji = 'fj',\n\tFinland = 'fi',\n\tFrance = 'fr',\n\tFrenchGuiana = 'gf',\n\tFrenchPolynesia = 'pf',\n\tGabon = 'ga',\n\tGambia = 'gm',\n\tGeorgia = 'ge',\n\tGermany = 'de',\n\tGhana = 'gh',\n\tGibraltar = 'gi',\n\tGreece = 'gr',\n\tGreenland = 'gl',\n\tGrenada = 'gd',\n\tGuadeloupe = 'gp',\n\tGuam = 'gu',\n\tGuatemala = 'gt',\n\tGuernsey = 'gg',\n\tGuinea = 'gn',\n\tGuineaBissau = 'gw',\n\tGuyana = 'gy',\n\tHaiti = 'ht',\n\tHonduras = 'hn',\n\tHongKong = 'hk',\n\tHungary = 'hu',\n\tIceland = 'is',\n\tIndia = 'in',\n\tIndonesia = 'id',\n\tIran = 'ir',\n\tIraq = 'iq',\n\tIreland = 'ie',\n\tIsleOfMan = 'im',\n\tIsrael = 'il',\n\tItaly = 'it',\n\tJamaica = 'jm',\n\tJapan = 'jp',\n\tJersey = 'je',\n\tJordan = 'jo',\n\tKazakhstan = 'kz',\n\tKenya = 'ke',\n\tKiribati = 'ki',\n\tKosovo = 'xk',\n\tKuwait = 'kw',\n\tKyrgyzstan = 'kg',\n\tLaos = 'la',\n\tLatvia = 'lv',\n\tLebanon = 'lb',\n\tLesotho = 'ls',\n\tLiberia = 'lr',\n\tLibya = 'ly',\n\tLiechtenstein = 'li',\n\tLithuania = 'lt',\n\tLuxembourg = 'lu',\n\tMacau = 'mo',\n\tMacedonia = 'mk',\n\tMadagascar = 'mg',\n\tMalawi = 'mw',\n\tMalaysia = 'my',\n\tMaldives = 'mv',\n\tMali = 'ml',\n\tMalta = 'mt',\n\tMarshallIslands = 'mh',\n\tMartinique = 'mq',\n\tMauritania = 'mr',\n\tMauritius = 'mu',\n\tMayotte = 'yt',\n\tMexico = 'mx',\n\tMicronesia = 'fm',\n\tMoldova = 'md',\n\tMonaco = 'mc',\n\tMongolia = 'mn',\n\tMontenegro = 'me',\n\tMontserrat = 'ms',\n\tMorocco = 'ma',\n\tMozambique = 'mz',\n\tMyanmar = 'mm',\n\tNamibia = 'na',\n\tNauru = 'nr',\n\tNepal = 'np',\n\tNetherlands = 'nl',\n\tNewCaledonia = 'nc',\n\tNewZealand = 'nz',\n\tNicaragua = 'ni',\n\tNiger = 'ne',\n\tNigeria = 'ng',\n\tNiue = 'nu',\n\tNorfolkIsland = 'nf',\n\tNorthKorea = 'kp',\n\tNorthernMarianaIslands = 'mp',\n\tNorway = 'no',\n\tOman = 'om',\n\tPakistan = 'pk',\n\tPalau = 'pw',\n\tPalestine = 'ps',\n\tPanama = 'pa',\n\tPapuaNewGuinea = 'pg',\n\tParaguay = 'py',\n\tPeru = 'pe',\n\tPhilippines = 'ph',\n\tPoland = 'pl',\n\tPortugal = 'pt',\n\tPuertoRico = 'pr',\n\tQatar = 'qa',\n\tRéunion = 're',\n\tRomania = 'ro',\n\tRussia = 'ru',\n\tRwanda = 'rw',\n\tSaintBarthélemy = 'bl',\n\tSaintHelena = 'sh',\n\tSaintKittsAndNevis = 'kn',\n\tSaintLucia = 'lc',\n\tSaintMartin = 'mf',\n\tSaintPierreAndMiquelon = 'pm',\n\tSaintVincentAndTheGrenadines = 'vc',\n\tSamoa = 'ws',\n\tSanMarino = 'sm',\n\tSãoToméAndPríncipe = 'st',\n\tSaudiArabia = 'sa',\n\tSenegal = 'sn',\n\tSerbia = 'rs',\n\tSeychelles = 'sc',\n\tSierraLeone = 'sl',\n\tSingapore = 'sg',\n\tSintMaarten = 'sx',\n\tSlovakia = 'sk',\n\tSlovenia = 'si',\n\tSolomonIslands = 'sb',\n\tSomalia = 'so',\n\tSouthAfrica = 'za',\n\tSouthKorea = 'kr',\n\tSouthSudan = 'ss',\n\tSpain = 'es',\n\tSriLanka = 'lk',\n\tSudan = 'sd',\n\tSuriname = 'sr',\n\tSvalbardAndJanMayen = 'sj',\n\tSwaziland = 'sz',\n\tSweden = 'se',\n\tSwitzerland = 'ch',\n\tSyria = 'sy',\n\tTaiwan = 'tw',\n\tTajikistan = 'tj',\n\tTanzania = 'tz',\n\tThailand = 'th',\n\tTimorLeste = 'tl',\n\tTogo = 'tg',\n\tTokelau = 'tk',\n\tTonga = 'to',\n\tTrinidadAndTobago = 'tt',\n\tTunisia = 'tn',\n\tTurkey = 'tr',\n\tTurkmenistan = 'tm',\n\tTurksAndCaicosIslands = 'tc',\n\tTuvalu = 'tv',\n\tUSVirginIslands = 'vi',\n\tUganda = 'ug',\n\tUkraine = 'ua',\n\tUnitedArabEmirates = 'ae',\n\tUnitedKingdom = 'gb',\n\tUnitedStates = 'us',\n\tUruguay = 'uy',\n\tUzbekistan = 'uz',\n\tVanuatu = 'vu',\n\tVaticanCity = 'va',\n\tVenezuela = 've',\n\tVietnam = 'vn',\n\tWallisAndFutuna = 'wf',\n\tWesternSahara = 'eh',\n\tYemen = 'ye',\n\tZambia = 'zm',\n\tZimbabwe = 'zw',\n\tÅlandIslands = 'ax',\n}\n","import { Injectable } from \"@angular/core\";\nimport { CountryISO } from '../enums/country-iso.enum';\n\n@Injectable()\nexport class CountryCode {\n\tpublic allCountries = [\n\t\t[\n\t\t\t'Afghanistan (‫افغانستان‬‎)',\n\t\t\tCountryISO.Afghanistan,\n\t\t\t'93'\n\t\t],\n\t\t[\n\t\t\t'Albania (Shqipëri)',\n\t\t\tCountryISO.Albania,\n\t\t\t'355'\n\t\t],\n\t\t[\n\t\t\t'Algeria (‫الجزائر‬‎)',\n\t\t\tCountryISO.Algeria,\n\t\t\t'213'\n\t\t],\n\t\t[\n\t\t\t'American Samoa',\n\t\t\t'as',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'684',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Andorra',\n\t\t\tCountryISO.Andorra,\n\t\t\t'376'\n\t\t],\n\t\t[\n\t\t\t'Angola',\n\t\t\tCountryISO.Angola,\n\t\t\t'244'\n\t\t],\n\t\t[\n\t\t\t'Anguilla',\n\t\t\t'ai',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'264',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Antigua and Barbuda',\n\t\t\t'ag',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'268',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Argentina',\n\t\t\tCountryISO.Argentina,\n\t\t\t'54'\n\t\t],\n\t\t[\n\t\t\t'Armenia (Հայաստան)',\n\t\t\tCountryISO.Armenia,\n\t\t\t'374'\n\t\t],\n\t\t[\n\t\t\t'Aruba',\n\t\t\tCountryISO.Aruba,\n\t\t\t'297'\n\t\t],\n\t\t[\n\t\t\t'Australia',\n\t\t\tCountryISO.Australia,\n\t\t\t'61',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Austria (Österreich)',\n\t\t\tCountryISO.Austria,\n\t\t\t'43'\n\t\t],\n\t\t[\n\t\t\t'Azerbaijan (Azərbaycan)',\n\t\t\tCountryISO.Azerbaijan,\n\t\t\t'994'\n\t\t],\n\t\t[\n\t\t\t'Bahamas',\n\t\t\t'bs',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'242',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Bahrain (‫البحرين‬‎)',\n\t\t\tCountryISO.Bahrain,\n\t\t\t'973'\n\t\t],\n\t\t[\n\t\t\t'Bangladesh (বাংলাদেশ)',\n\t\t\tCountryISO.Bangladesh,\n\t\t\t'880'\n\t\t],\n\t\t[\n\t\t\t'Barbados',\n\t\t\t'bb',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'246',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Belarus (Беларусь)',\n\t\t\tCountryISO.Belarus,\n\t\t\t'375'\n\t\t],\n\t\t[\n\t\t\t'Belgium (België)',\n\t\t\tCountryISO.Belgium,\n\t\t\t'32'\n\t\t],\n\t\t[\n\t\t\t'Belize',\n\t\t\tCountryISO.Belize,\n\t\t\t'501'\n\t\t],\n\t\t[\n\t\t\t'Benin (Bénin)',\n\t\t\tCountryISO.Benin,\n\t\t\t'229'\n\t\t],\n\t\t[\n\t\t\t'Bermuda',\n\t\t\t'bm',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'441',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Bhutan (འབྲུག)',\n\t\t\tCountryISO.Bhutan,\n\t\t\t'975'\n\t\t],\n\t\t[\n\t\t\t'Bolivia',\n\t\t\tCountryISO.Bolivia,\n\t\t\t'591'\n\t\t],\n\t\t[\n\t\t\t'Bosnia and Herzegovina (Босна и Херцеговина)',\n\t\t\tCountryISO.BosniaAndHerzegovina,\n\t\t\t'387'\n\t\t],\n\t\t[\n\t\t\t'Botswana',\n\t\t\tCountryISO.Botswana,\n\t\t\t'267'\n\t\t],\n\t\t[\n\t\t\t'Brazil (Brasil)',\n\t\t\tCountryISO.Brazil,\n\t\t\t'55'\n\t\t],\n\t\t[\n\t\t\t'British Indian Ocean Territory',\n\t\t\tCountryISO.BritishIndianOceanTerritory,\n\t\t\t'246'\n\t\t],\n\t\t[\n\t\t\t'British Virgin Islands',\n\t\t\t'vg',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'284',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Brunei',\n\t\t\tCountryISO.Brunei,\n\t\t\t'673'\n\t\t],\n\t\t[\n\t\t\t'Bulgaria (България)',\n\t\t\tCountryISO.Bulgaria,\n\t\t\t'359'\n\t\t],\n\t\t[\n\t\t\t'Burkina Faso',\n\t\t\tCountryISO.BurkinaFaso,\n\t\t\t'226'\n\t\t],\n\t\t[\n\t\t\t'Burundi (Uburundi)',\n\t\t\tCountryISO.Burundi,\n\t\t\t'257'\n\t\t],\n\t\t[\n\t\t\t'Cambodia (កម្ពុជា)',\n\t\t\tCountryISO.Cambodia,\n\t\t\t'855'\n\t\t],\n\t\t[\n\t\t\t'Cameroon (Cameroun)',\n\t\t\tCountryISO.Cameroon,\n\t\t\t'237'\n\t\t],\n\t\t[\n\t\t\t'Canada',\n\t\t\tCountryISO.Canada,\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'204', '226', '236', '249', '250', '289', '306', '343', '365', '387', '403', '416',\n\t\t\t\t'418', '431', '437', '438', '450', '506', '514', '519', '548', '579', '581', '587',\n\t\t\t\t'604', '613', '639', '647', '672', '705', '709', '742', '778', '780', '782', '807',\n\t\t\t\t'819', '825', '867', '873', '902', '905'\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Cape Verde (Kabu Verdi)',\n\t\t\tCountryISO.CapeVerde,\n\t\t\t'238'\n\t\t],\n\t\t[\n\t\t\t'Caribbean Netherlands',\n\t\t\tCountryISO.CaribbeanNetherlands,\n\t\t\t'599',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Cayman Islands',\n\t\t\t'ky',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'345',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Central African Republic (République centrafricaine)',\n\t\t\tCountryISO.CentralAfricanRepublic,\n\t\t\t'236'\n\t\t],\n\t\t[\n\t\t\t'Chad (Tchad)',\n\t\t\tCountryISO.Chad,\n\t\t\t'235'\n\t\t],\n\t\t[\n\t\t\t'Chile',\n\t\t\tCountryISO.Chile,\n\t\t\t'56'\n\t\t],\n\t\t[\n\t\t\t'China (中国)',\n\t\t\tCountryISO.China,\n\t\t\t'86'\n\t\t],\n\t\t[\n\t\t\t'Christmas Island',\n\t\t\tCountryISO.ChristmasIsland,\n\t\t\t'61',\n\t\t\t2\n\t\t],\n\t\t[\n\t\t\t'Cocos (Keeling) Islands',\n\t\t\tCountryISO.Cocos,\n\t\t\t'61',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Colombia',\n\t\t\tCountryISO.Colombia,\n\t\t\t'57'\n\t\t],\n\t\t[\n\t\t\t'Comoros (‫جزر القمر‬‎)',\n\t\t\tCountryISO.Comoros,\n\t\t\t'269'\n\t\t],\n\t\t[\n\t\t\t'Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)',\n\t\t\tCountryISO.CongoDRCJamhuriYaKidemokrasiaYaKongo,\n\t\t\t'243'\n\t\t],\n\t\t[\n\t\t\t'Congo (Republic) (Congo-Brazzaville)',\n\t\t\tCountryISO.CongoRepublicCongoBrazzaville,\n\t\t\t'242'\n\t\t],\n\t\t[\n\t\t\t'Cook Islands',\n\t\t\tCountryISO.CookIslands,\n\t\t\t'682'\n\t\t],\n\t\t[\n\t\t\t'Costa Rica',\n\t\t\tCountryISO.CostaRica,\n\t\t\t'506'\n\t\t],\n\t\t[\n\t\t\t'Côte d’Ivoire',\n\t\t\tCountryISO.CôteDIvoire,\n\t\t\t'225'\n\t\t],\n\t\t[\n\t\t\t'Croatia (Hrvatska)',\n\t\t\tCountryISO.Croatia,\n\t\t\t'385'\n\t\t],\n\t\t[\n\t\t\t'Cuba',\n\t\t\tCountryISO.Cuba,\n\t\t\t'53'\n\t\t],\n\t\t[\n\t\t\t'Curaçao',\n\t\t\tCountryISO.Curaçao,\n\t\t\t'599',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Cyprus (Κύπρος)',\n\t\t\tCountryISO.Cyprus,\n\t\t\t'357'\n\t\t],\n\t\t[\n\t\t\t'Czech Republic (Česká republika)',\n\t\t\tCountryISO.CzechRepublic,\n\t\t\t'420'\n\t\t],\n\t\t[\n\t\t\t'Denmark (Danmark)',\n\t\t\tCountryISO.Denmark,\n\t\t\t'45'\n\t\t],\n\t\t[\n\t\t\t'Djibouti',\n\t\t\tCountryISO.Djibouti,\n\t\t\t'253'\n\t\t],\n\t\t[\n\t\t\t'Dominica',\n\t\t\tCountryISO.Dominica,\n\t\t\t'1767'\n\t\t],\n\t\t[\n\t\t\t'Dominican Republic (República Dominicana)',\n\t\t\tCountryISO.DominicanRepublic,\n\t\t\t'1',\n\t\t\t2,\n\t\t\t['809', '829', '849']\n\t\t],\n\t\t[\n\t\t\t'Ecuador',\n\t\t\tCountryISO.Ecuador,\n\t\t\t'593'\n\t\t],\n\t\t[\n\t\t\t'Egypt (‫مصر‬‎)',\n\t\t\tCountryISO.Egypt,\n\t\t\t'20'\n\t\t],\n\t\t[\n\t\t\t'El Salvador',\n\t\t\tCountryISO.ElSalvador,\n\t\t\t'503'\n\t\t],\n\t\t[\n\t\t\t'Equatorial Guinea (Guinea Ecuatorial)',\n\t\t\tCountryISO.EquatorialGuinea,\n\t\t\t'240'\n\t\t],\n\t\t[\n\t\t\t'Eritrea',\n\t\t\tCountryISO.Eritrea,\n\t\t\t'291'\n\t\t],\n\t\t[\n\t\t\t'Estonia (Eesti)',\n\t\t\tCountryISO.Estonia,\n\t\t\t'372'\n\t\t],\n\t\t[\n\t\t\t'Ethiopia',\n\t\t\tCountryISO.Ethiopia,\n\t\t\t'251'\n\t\t],\n\t\t[\n\t\t\t'Falkland Islands (Islas Malvinas)',\n\t\t\tCountryISO.FalklandIslands,\n\t\t\t'500'\n\t\t],\n\t\t[\n\t\t\t'Faroe Islands (Føroyar)',\n\t\t\tCountryISO.FaroeIslands,\n\t\t\t'298'\n\t\t],\n\t\t[\n\t\t\t'Fiji',\n\t\t\tCountryISO.Fiji,\n\t\t\t'679'\n\t\t],\n\t\t[\n\t\t\t'Finland (Suomi)',\n\t\t\tCountryISO.Finland,\n\t\t\t'358',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'France',\n\t\t\tCountryISO.France,\n\t\t\t'33'\n\t\t],\n\t\t[\n\t\t\t'French Guiana (Guyane française)',\n\t\t\tCountryISO.FrenchGuiana,\n\t\t\t'594'\n\t\t],\n\t\t[\n\t\t\t'French Polynesia (Polynésie française)',\n\t\t\tCountryISO.FrenchPolynesia,\n\t\t\t'689'\n\t\t],\n\t\t[\n\t\t\t'Gabon',\n\t\t\tCountryISO.Gabon,\n\t\t\t'241'\n\t\t],\n\t\t[\n\t\t\t'Gambia',\n\t\t\tCountryISO.Gambia,\n\t\t\t'220'\n\t\t],\n\t\t[\n\t\t\t'Georgia (საქართველო)',\n\t\t\tCountryISO.Georgia,\n\t\t\t'995'\n\t\t],\n\t\t[\n\t\t\t'Germany (Deutschland)',\n\t\t\tCountryISO.Germany,\n\t\t\t'49'\n\t\t],\n\t\t[\n\t\t\t'Ghana (Gaana)',\n\t\t\tCountryISO.Ghana,\n\t\t\t'233'\n\t\t],\n\t\t[\n\t\t\t'Gibraltar',\n\t\t\tCountryISO.Gibraltar,\n\t\t\t'350'\n\t\t],\n\t\t[\n\t\t\t'Greece (Ελλάδα)',\n\t\t\tCountryISO.Greece,\n\t\t\t'30'\n\t\t],\n\t\t[\n\t\t\t'Greenland (Kalaallit Nunaat)',\n\t\t\tCountryISO.Greenland,\n\t\t\t'299'\n\t\t],\n\t\t[\n\t\t\t'Grenada',\n\t\t\tCountryISO.Grenada,\n\t\t\t'1473'\n\t\t],\n\t\t[\n\t\t\t'Guadeloupe',\n\t\t\tCountryISO.Guadeloupe,\n\t\t\t'590',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Guam',\n\t\t\t'gu',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'671',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Guatemala',\n\t\t\tCountryISO.Guatemala,\n\t\t\t'502'\n\t\t],\n\t\t[\n\t\t\t'Guernsey',\n\t\t\tCountryISO.Guernsey,\n\t\t\t'44',\n\t\t\t1,\n\t\t\t[1481]\n\t\t],\n\t\t[\n\t\t\t'Guinea (Guinée)',\n\t\t\tCountryISO.Guinea,\n\t\t\t'224'\n\t\t],\n\t\t[\n\t\t\t'Guinea-Bissau (Guiné Bissau)',\n\t\t\tCountryISO.GuineaBissau,\n\t\t\t'245'\n\t\t],\n\t\t[\n\t\t\t'Guyana',\n\t\t\tCountryISO.Guyana,\n\t\t\t'592'\n\t\t],\n\t\t[\n\t\t\t'Haiti',\n\t\t\tCountryISO.Haiti,\n\t\t\t'509'\n\t\t],\n\t\t[\n\t\t\t'Honduras',\n\t\t\tCountryISO.Honduras,\n\t\t\t'504'\n\t\t],\n\t\t[\n\t\t\t'Hong Kong (香港)',\n\t\t\tCountryISO.HongKong,\n\t\t\t'852'\n\t\t],\n\t\t[\n\t\t\t'Hungary (Magyarország)',\n\t\t\tCountryISO.Hungary,\n\t\t\t'36'\n\t\t],\n\t\t[\n\t\t\t'Iceland (Ísland)',\n\t\t\tCountryISO.Iceland,\n\t\t\t'354'\n\t\t],\n\t\t[\n\t\t\t'India (भारत)',\n\t\t\tCountryISO.India,\n\t\t\t'91'\n\t\t],\n\t\t[\n\t\t\t'Indonesia',\n\t\t\tCountryISO.Indonesia,\n\t\t\t'62'\n\t\t],\n\t\t[\n\t\t\t'Iran (‫ایران‬‎)',\n\t\t\tCountryISO.Iran,\n\t\t\t'98'\n\t\t],\n\t\t[\n\t\t\t'Iraq (‫العراق‬‎)',\n\t\t\tCountryISO.Iraq,\n\t\t\t'964'\n\t\t],\n\t\t[\n\t\t\t'Ireland',\n\t\t\tCountryISO.Ireland,\n\t\t\t'353'\n\t\t],\n\t\t[\n\t\t\t'Isle of Man',\n\t\t\tCountryISO.IsleOfMan,\n\t\t\t'44',\n\t\t\t2,\n\t\t\t[1624]\n\t\t],\n\t\t[\n\t\t\t'Israel (‫ישראל‬‎)',\n\t\t\tCountryISO.Israel,\n\t\t\t'972'\n\t\t],\n\t\t[\n\t\t\t'Italy (Italia)',\n\t\t\tCountryISO.Italy,\n\t\t\t'39',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Jamaica',\n\t\t\t'jm',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'876',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Japan (日本)',\n\t\t\tCountryISO.Japan,\n\t\t\t'81'\n\t\t],\n\t\t[\n\t\t\t'Jersey',\n\t\t\tCountryISO.Jersey,\n\t\t\t'44',\n\t\t\t3,\n\t\t\t[1534]\n\t\t],\n\t\t[\n\t\t\t'Jordan (‫الأردن‬‎)',\n\t\t\tCountryISO.Jordan,\n\t\t\t'962'\n\t\t],\n\t\t[\n\t\t\t'Kazakhstan (Казахстан)',\n\t\t\tCountryISO.Kazakhstan,\n\t\t\t'7',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Kenya',\n\t\t\tCountryISO.Kenya,\n\t\t\t'254'\n\t\t],\n\t\t[\n\t\t\t'Kiribati',\n\t\t\tCountryISO.Kiribati,\n\t\t\t'686'\n\t\t],\n\t\t[\n\t\t\t'Kosovo',\n\t\t\tCountryISO.Kosovo,\n\t\t\t'383'\n\t\t],\n\t\t[\n\t\t\t'Kuwait (‫الكويت‬‎)',\n\t\t\tCountryISO.Kuwait,\n\t\t\t'965'\n\t\t],\n\t\t[\n\t\t\t'Kyrgyzstan (Кыргызстан)',\n\t\t\tCountryISO.Kyrgyzstan,\n\t\t\t'996'\n\t\t],\n\t\t[\n\t\t\t'Laos (ລາວ)',\n\t\t\tCountryISO.Laos,\n\t\t\t'856'\n\t\t],\n\t\t[\n\t\t\t'Latvia (Latvija)',\n\t\t\tCountryISO.Latvia,\n\t\t\t'371'\n\t\t],\n\t\t[\n\t\t\t'Lebanon (‫لبنان‬‎)',\n\t\t\tCountryISO.Lebanon,\n\t\t\t'961'\n\t\t],\n\t\t[\n\t\t\t'Lesotho',\n\t\t\tCountryISO.Lesotho,\n\t\t\t'266'\n\t\t],\n\t\t[\n\t\t\t'Liberia',\n\t\t\tCountryISO.Liberia,\n\t\t\t'231'\n\t\t],\n\t\t[\n\t\t\t'Libya (‫ليبيا‬‎)',\n\t\t\tCountryISO.Libya,\n\t\t\t'218'\n\t\t],\n\t\t[\n\t\t\t'Liechtenstein',\n\t\t\tCountryISO.Liechtenstein,\n\t\t\t'423'\n\t\t],\n\t\t[\n\t\t\t'Lithuania (Lietuva)',\n\t\t\tCountryISO.Lithuania,\n\t\t\t'370'\n\t\t],\n\t\t[\n\t\t\t'Luxembourg',\n\t\t\tCountryISO.Luxembourg,\n\t\t\t'352'\n\t\t],\n\t\t[\n\t\t\t'Macau (澳門)',\n\t\t\tCountryISO.Macau,\n\t\t\t'853'\n\t\t],\n\t\t[\n\t\t\t'Macedonia (FYROM) (Македонија)',\n\t\t\tCountryISO.Macedonia,\n\t\t\t'389'\n\t\t],\n\t\t[\n\t\t\t'Madagascar (Madagasikara)',\n\t\t\tCountryISO.Madagascar,\n\t\t\t'261'\n\t\t],\n\t\t[\n\t\t\t'Malawi',\n\t\t\tCountryISO.Malawi,\n\t\t\t'265'\n\t\t],\n\t\t[\n\t\t\t'Malaysia',\n\t\t\tCountryISO.Malaysia,\n\t\t\t'60'\n\t\t],\n\t\t[\n\t\t\t'Maldives',\n\t\t\tCountryISO.Maldives,\n\t\t\t'960'\n\t\t],\n\t\t[\n\t\t\t'Mali',\n\t\t\tCountryISO.Mali,\n\t\t\t'223'\n\t\t],\n\t\t[\n\t\t\t'Malta',\n\t\t\tCountryISO.Malta,\n\t\t\t'356'\n\t\t],\n\t\t[\n\t\t\t'Marshall Islands',\n\t\t\tCountryISO.MarshallIslands,\n\t\t\t'692'\n\t\t],\n\t\t[\n\t\t\t'Martinique',\n\t\t\tCountryISO.Martinique,\n\t\t\t'596'\n\t\t],\n\t\t[\n\t\t\t'Mauritania (‫موريتانيا‬‎)',\n\t\t\tCountryISO.Mauritania,\n\t\t\t'222'\n\t\t],\n\t\t[\n\t\t\t'Mauritius (Moris)',\n\t\t\tCountryISO.Mauritius,\n\t\t\t'230'\n\t\t],\n\t\t[\n\t\t\t'Mayotte',\n\t\t\tCountryISO.Mayotte,\n\t\t\t'262',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Mexico (México)',\n\t\t\tCountryISO.Mexico,\n\t\t\t'52'\n\t\t],\n\t\t[\n\t\t\t'Micronesia',\n\t\t\tCountryISO.Micronesia,\n\t\t\t'691'\n\t\t],\n\t\t[\n\t\t\t'Moldova (Republica Moldova)',\n\t\t\tCountryISO.Moldova,\n\t\t\t'373'\n\t\t],\n\t\t[\n\t\t\t'Monaco',\n\t\t\tCountryISO.Monaco,\n\t\t\t'377'\n\t\t],\n\t\t[\n\t\t\t'Mongolia (Монгол)',\n\t\t\tCountryISO.Mongolia,\n\t\t\t'976'\n\t\t],\n\t\t[\n\t\t\t'Montenegro (Crna Gora)',\n\t\t\tCountryISO.Montenegro,\n\t\t\t'382'\n\t\t],\n\t\t[\n\t\t\t'Montserrat',\n\t\t\t'ms',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'664',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Morocco (‫المغرب‬‎)',\n\t\t\tCountryISO.Morocco,\n\t\t\t'212',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Mozambique (Moçambique)',\n\t\t\tCountryISO.Mozambique,\n\t\t\t'258'\n\t\t],\n\t\t[\n\t\t\t'Myanmar (Burma) (မြန်မာ)',\n\t\t\tCountryISO.Myanmar,\n\t\t\t'95'\n\t\t],\n\t\t[\n\t\t\t'Namibia (Namibië)',\n\t\t\tCountryISO.Namibia,\n\t\t\t'264'\n\t\t],\n\t\t[\n\t\t\t'Nauru',\n\t\t\tCountryISO.Nauru,\n\t\t\t'674'\n\t\t],\n\t\t[\n\t\t\t'Nepal (नेपाल)',\n\t\t\tCountryISO.Nepal,\n\t\t\t'977'\n\t\t],\n\t\t[\n\t\t\t'Netherlands (Nederland)',\n\t\t\tCountryISO.Netherlands,\n\t\t\t'31'\n\t\t],\n\t\t[\n\t\t\t'New Caledonia (Nouvelle-Calédonie)',\n\t\t\tCountryISO.NewCaledonia,\n\t\t\t'687'\n\t\t],\n\t\t[\n\t\t\t'New Zealand',\n\t\t\tCountryISO.NewZealand,\n\t\t\t'64'\n\t\t],\n\t\t[\n\t\t\t'Nicaragua',\n\t\t\tCountryISO.Nicaragua,\n\t\t\t'505'\n\t\t],\n\t\t[\n\t\t\t'Niger (Nijar)',\n\t\t\tCountryISO.Niger,\n\t\t\t'227'\n\t\t],\n\t\t[\n\t\t\t'Nigeria',\n\t\t\tCountryISO.Nigeria,\n\t\t\t'234'\n\t\t],\n\t\t[\n\t\t\t'Niue',\n\t\t\tCountryISO.Niue,\n\t\t\t'683'\n\t\t],\n\t\t[\n\t\t\t'Norfolk Island',\n\t\t\tCountryISO.NorfolkIsland,\n\t\t\t'672'\n\t\t],\n\t\t[\n\t\t\t'North Korea (조선 민주주의 인민 공화국)',\n\t\t\tCountryISO.NorthKorea,\n\t\t\t'850'\n\t\t],\n\t\t[\n\t\t\t'Northern Mariana Islands',\n\t\t\tCountryISO.NorthernMarianaIslands,\n\t\t\t'1670'\n\t\t],\n\t\t[\n\t\t\t'Norway (Norge)',\n\t\t\tCountryISO.Norway,\n\t\t\t'47',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Oman (‫عُمان‬‎)',\n\t\t\tCountryISO.Oman,\n\t\t\t'968'\n\t\t],\n\t\t[\n\t\t\t'Pakistan (‫پاکستان‬‎)',\n\t\t\tCountryISO.Pakistan,\n\t\t\t'92'\n\t\t],\n\t\t[\n\t\t\t'Palau',\n\t\t\tCountryISO.Palau,\n\t\t\t'680'\n\t\t],\n\t\t[\n\t\t\t'Palestine (‫فلسطين‬‎)',\n\t\t\tCountryISO.Palestine,\n\t\t\t'970'\n\t\t],\n\t\t[\n\t\t\t'Panama (Panamá)',\n\t\t\tCountryISO.Panama,\n\t\t\t'507'\n\t\t],\n\t\t[\n\t\t\t'Papua New Guinea',\n\t\t\tCountryISO.PapuaNewGuinea,\n\t\t\t'675'\n\t\t],\n\t\t[\n\t\t\t'Paraguay',\n\t\t\tCountryISO.Paraguay,\n\t\t\t'595'\n\t\t],\n\t\t[\n\t\t\t'Peru (Perú)',\n\t\t\tCountryISO.Peru,\n\t\t\t'51'\n\t\t],\n\t\t[\n\t\t\t'Philippines',\n\t\t\tCountryISO.Philippines,\n\t\t\t'63'\n\t\t],\n\t\t[\n\t\t\t'Poland (Polska)',\n\t\t\tCountryISO.Poland,\n\t\t\t'48'\n\t\t],\n\t\t[\n\t\t\t'Portugal',\n\t\t\tCountryISO.Portugal,\n\t\t\t'351'\n\t\t],\n\t\t[\n\t\t\t'Puerto Rico',\n\t\t\tCountryISO.PuertoRico,\n\t\t\t'1',\n\t\t\t3,\n\t\t\t['787', '939']\n\t\t],\n\t\t[\n\t\t\t'Qatar (‫قطر‬‎)',\n\t\t\tCountryISO.Qatar,\n\t\t\t'974'\n\t\t],\n\t\t[\n\t\t\t'Réunion (La Réunion)',\n\t\t\tCountryISO.Réunion,\n\t\t\t'262',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Romania (România)',\n\t\t\tCountryISO.Romania,\n\t\t\t'40'\n\t\t],\n\t\t[\n\t\t\t'Russia (Россия)',\n\t\t\tCountryISO.Russia,\n\t\t\t'7',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Rwanda',\n\t\t\tCountryISO.Rwanda,\n\t\t\t'250'\n\t\t],\n\t\t[\n\t\t\t'Saint Barthélemy (Saint-Barthélemy)',\n\t\t\tCountryISO.SaintBarthélemy,\n\t\t\t'590',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Saint Helena',\n\t\t\tCountryISO.SaintHelena,\n\t\t\t'290'\n\t\t],\n\t\t[\n\t\t\t'Saint Kitts and Nevis',\n\t\t\tCountryISO.SaintKittsAndNevis,\n\t\t\t'1869'\n\t\t],\n\t\t[\n\t\t\t'Saint Lucia',\n\t\t\t'lc',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'758',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Saint Martin (Saint-Martin (partie française))',\n\t\t\tCountryISO.SaintMartin,\n\t\t\t'590',\n\t\t\t2\n\t\t],\n\t\t[\n\t\t\t'Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)',\n\t\t\tCountryISO.SaintPierreAndMiquelon,\n\t\t\t'508'\n\t\t],\n\t\t[\n\t\t\t'Saint Vincent and the Grenadines',\n\t\t\t'vc',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'784',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Samoa',\n\t\t\tCountryISO.Samoa,\n\t\t\t'685'\n\t\t],\n\t\t[\n\t\t\t'San Marino',\n\t\t\tCountryISO.SanMarino,\n\t\t\t'378'\n\t\t],\n\t\t[\n\t\t\t'São Tomé and Príncipe (São Tomé e Príncipe)',\n\t\t\tCountryISO.SãoToméAndPríncipe,\n\t\t\t'239'\n\t\t],\n\t\t[\n\t\t\t'Saudi Arabia (‫المملكة العربية السعودية‬‎)',\n\t\t\tCountryISO.SaudiArabia,\n\t\t\t'966'\n\t\t],\n\t\t[\n\t\t\t'Senegal (Sénégal)',\n\t\t\tCountryISO.Senegal,\n\t\t\t'221'\n\t\t],\n\t\t[\n\t\t\t'Serbia (Србија)',\n\t\t\tCountryISO.Serbia,\n\t\t\t'381'\n\t\t],\n\t\t[\n\t\t\t'Seychelles',\n\t\t\tCountryISO.Seychelles,\n\t\t\t'248'\n\t\t],\n\t\t[\n\t\t\t'Sierra Leone',\n\t\t\tCountryISO.SierraLeone,\n\t\t\t'232'\n\t\t],\n\t\t[\n\t\t\t'Singapore',\n\t\t\tCountryISO.Singapore,\n\t\t\t'65'\n\t\t],\n\t\t[\n\t\t\t'Sint Maarten',\n\t\t\t'sx',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'721',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Slovakia (Slovensko)',\n\t\t\tCountryISO.Slovakia,\n\t\t\t'421'\n\t\t],\n\t\t[\n\t\t\t'Slovenia (Slovenija)',\n\t\t\tCountryISO.Slovenia,\n\t\t\t'386'\n\t\t],\n\t\t[\n\t\t\t'Solomon Islands',\n\t\t\tCountryISO.SolomonIslands,\n\t\t\t'677'\n\t\t],\n\t\t[\n\t\t\t'Somalia (Soomaaliya)',\n\t\t\tCountryISO.Somalia,\n\t\t\t'252'\n\t\t],\n\t\t[\n\t\t\t'South Africa',\n\t\t\tCountryISO.SouthAfrica,\n\t\t\t'27'\n\t\t],\n\t\t[\n\t\t\t'South Korea (대한민국)',\n\t\t\tCountryISO.SouthKorea,\n\t\t\t'82'\n\t\t],\n\t\t[\n\t\t\t'South Sudan (‫جنوب السودان‬‎)',\n\t\t\tCountryISO.SouthSudan,\n\t\t\t'211'\n\t\t],\n\t\t[\n\t\t\t'Spain (España)',\n\t\t\tCountryISO.Spain,\n\t\t\t'34'\n\t\t],\n\t\t[\n\t\t\t'Sri Lanka (ශ්‍රී ලංකාව)',\n\t\t\tCountryISO.SriLanka,\n\t\t\t'94'\n\t\t],\n\t\t[\n\t\t\t'Sudan (‫السودان‬‎)',\n\t\t\tCountryISO.Sudan,\n\t\t\t'249'\n\t\t],\n\t\t[\n\t\t\t'Suriname',\n\t\t\tCountryISO.Suriname,\n\t\t\t'597'\n\t\t],\n\t\t[\n\t\t\t'Svalbard and Jan Mayen',\n\t\t\tCountryISO.SvalbardAndJanMayen,\n\t\t\t'47',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Swaziland',\n\t\t\tCountryISO.Swaziland,\n\t\t\t'268'\n\t\t],\n\t\t[\n\t\t\t'Sweden (Sverige)',\n\t\t\tCountryISO.Sweden,\n\t\t\t'46'\n\t\t],\n\t\t[\n\t\t\t'Switzerland (Schweiz)',\n\t\t\tCountryISO.Switzerland,\n\t\t\t'41'\n\t\t],\n\t\t[\n\t\t\t'Syria (‫سوريا‬‎)',\n\t\t\tCountryISO.Syria,\n\t\t\t'963'\n\t\t],\n\t\t[\n\t\t\t'Taiwan (台灣)',\n\t\t\tCountryISO.Taiwan,\n\t\t\t'886'\n\t\t],\n\t\t[\n\t\t\t'Tajikistan',\n\t\t\tCountryISO.Tajikistan,\n\t\t\t'992'\n\t\t],\n\t\t[\n\t\t\t'Tanzania',\n\t\t\tCountryISO.Tanzania,\n\t\t\t'255'\n\t\t],\n\t\t[\n\t\t\t'Thailand (ไทย)',\n\t\t\tCountryISO.Thailand,\n\t\t\t'66'\n\t\t],\n\t\t[\n\t\t\t'Timor-Leste',\n\t\t\tCountryISO.TimorLeste,\n\t\t\t'670'\n\t\t],\n\t\t[\n\t\t\t'Togo',\n\t\t\tCountryISO.Togo,\n\t\t\t'228'\n\t\t],\n\t\t[\n\t\t\t'Tokelau',\n\t\t\tCountryISO.Tokelau,\n\t\t\t'690'\n\t\t],\n\t\t[\n\t\t\t'Tonga',\n\t\t\tCountryISO.Tonga,\n\t\t\t'676'\n\t\t],\n\t\t[\n\t\t\t'Trinidad and Tobago',\n\t\t\t'tt',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'868',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Tunisia (‫تونس‬‎)',\n\t\t\tCountryISO.Tunisia,\n\t\t\t'216'\n\t\t],\n\t\t[\n\t\t\t'Turkey (Türkiye)',\n\t\t\tCountryISO.Turkey,\n\t\t\t'90'\n\t\t],\n\t\t[\n\t\t\t'Turkmenistan',\n\t\t\tCountryISO.Turkmenistan,\n\t\t\t'993'\n\t\t],\n\t\t[\n\t\t\t'Turks and Caicos Islands',\n\t\t\tCountryISO.TurksAndCaicosIslands,\n\t\t\t'1649'\n\t\t],\n\t\t[\n\t\t\t'Tuvalu',\n\t\t\tCountryISO.Tuvalu,\n\t\t\t'688'\n\t\t],\n\t\t[\n\t\t\t'U.S. Virgin Islands',\n\t\t\t'vi',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'340',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Uganda',\n\t\t\tCountryISO.Uganda,\n\t\t\t'256'\n\t\t],\n\t\t[\n\t\t\t'Ukraine (Україна)',\n\t\t\tCountryISO.Ukraine,\n\t\t\t'380'\n\t\t],\n\t\t[\n\t\t\t'United Arab Emirates (‫الإمارات العربية المتحدة‬‎)',\n\t\t\tCountryISO.UnitedArabEmirates,\n\t\t\t'971'\n\t\t],\n\t\t[\n\t\t\t'United Kingdom',\n\t\t\tCountryISO.UnitedKingdom,\n\t\t\t'44',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'United States',\n\t\t\tCountryISO.UnitedStates,\n\t\t\t'1',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Uruguay',\n\t\t\tCountryISO.Uruguay,\n\t\t\t'598'\n\t\t],\n\t\t[\n\t\t\t'Uzbekistan (Oʻzbekiston)',\n\t\t\tCountryISO.Uzbekistan,\n\t\t\t'998'\n\t\t],\n\t\t[\n\t\t\t'Vanuatu',\n\t\t\tCountryISO.Vanuatu,\n\t\t\t'678'\n\t\t],\n\t\t[\n\t\t\t'Vatican City (Città del Vaticano)',\n\t\t\tCountryISO.VaticanCity,\n\t\t\t'39',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Venezuela',\n\t\t\tCountryISO.Venezuela,\n\t\t\t'58'\n\t\t],\n\t\t[\n\t\t\t'Vietnam (Việt Nam)',\n\t\t\tCountryISO.Vietnam,\n\t\t\t'84'\n\t\t],\n\t\t[\n\t\t\t'Wallis and Futuna',\n\t\t\tCountryISO.WallisAndFutuna,\n\t\t\t'681'\n\t\t],\n\t\t[\n\t\t\t'Western Sahara (‫الصحراء الغربية‬‎)',\n\t\t\tCountryISO.WesternSahara,\n\t\t\t'212',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Yemen (‫اليمن‬‎)',\n\t\t\tCountryISO.Yemen,\n\t\t\t'967'\n\t\t],\n\t\t[\n\t\t\t'Zambia',\n\t\t\tCountryISO.Zambia,\n\t\t\t'260'\n\t\t],\n\t\t[\n\t\t\t'Zimbabwe',\n\t\t\tCountryISO.Zimbabwe,\n\t\t\t'263'\n\t\t],\n\t\t[\n\t\t\t'Åland Islands',\n\t\t\tCountryISO.ÅlandIslands,\n\t\t\t'358',\n\t\t\t1\n\t\t]\n\t];\n}","export enum SearchCountryField {\n\tDialCode = 'dialCode',\n\tIso2 = 'iso2',\n\tName = 'name',\n\tAll = 'all'\n}\n","import * as lpn from 'google-libphonenumber';\n\n/*\nWe use \"control: any\" instead of \"control: FormControl\" to silence:\n\"Property 'nativeElement' does not exist on type 'FormControl'\".\nThis happens because I've expanded control with nativeElement via\n'NativeElementInjectorDirective' to get an access to the element.\nMore about this approach and reasons for this:\nhttps://github.com/angular/angular/issues/18025\nhttps://stackoverflow.com/a/54075119/1617590\n*/\nexport const phoneNumberValidator = (control: any) => {\n\tif (!control.value) {\n\t\treturn;\n\t}\n\t// Find <input> inside injected nativeElement and get its \"id\".\n\tconst el: HTMLElement = control.nativeElement as HTMLElement;\n\tconst inputBox: HTMLInputElement | any = el\n\t\t? el.querySelector('input[type=\"tel\"]')\n\t\t: undefined;\n\tif (inputBox) {\n\t\tconst id = inputBox.id;\n\t\tconst isCheckValidation = inputBox.getAttribute('validation');\n\t\tif (isCheckValidation === 'true') {\n\t\t\tconst isRequired = control.errors && control.errors.required === true;\n\t\t\tconst error = { validatePhoneNumber: { valid: false } };\n\n\t\t\tinputBox.setCustomValidity('Invalid field.');\n\n\t\t\tlet number: lpn.PhoneNumber;\n\n\t\t\ttry {\n\t\t\t\tnumber = lpn.PhoneNumberUtil.getInstance().parse(\n\t\t\t\t\tcontrol.value.number,\n\t\t\t\t\tcontrol.value.countryCode\n\t\t\t\t);\n\t\t\t} catch (e) {\n\t\t\t\tif (isRequired) {\n\t\t\t\t\treturn error;\n\t\t\t\t} else {\n\t\t\t\t\tinputBox.setCustomValidity('');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (control.value) {\n\t\t\t\t// @ts-ignore\n        if (!number) {\n\t\t\t\t\treturn error;\n\t\t\t\t} else {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!lpn.PhoneNumberUtil.getInstance().isValidNumberForRegion(\n\t\t\t\t\t\t\tnumber,\n\t\t\t\t\t\t\tcontrol.value.countryCode\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn error;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinputBox.setCustomValidity('');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isCheckValidation === 'false') {\n\t\t\tinputBox.setCustomValidity('');\n\n\t\t\tcontrol.clearValidators();\n\t\t}\n\t}\n\treturn;\n};\n","export enum PhoneNumberFormat {\n\tInternational = 'INTERNATIONAL',\n\tNational = 'NATIONAL',\n}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\n/*\n\"Property 'nativeElement' does not exist on type 'FormControl'\".\n'NativeElementInjectorDirective' injects nativeElement to each control,\nso we can access it from inside validator for example.\nMore about this approach and reasons for this:\nhttps://github.com/angular/angular/issues/18025\nhttps://stackoverflow.com/a/54075119/1617590\n*/\n@Directive({\n\t// tslint:disable-next-line: directive-selector\n\tselector: '[ngModel], [formControl], [formControlName]',\n})\nexport class NativeElementInjectorDirective implements OnInit {\n\tconstructor(\n\t\tprivate controlDir: NgControl,\n\t\tprivate host: ElementRef<HTMLFormElement>\n\t) {}\n\tngOnInit() {\n\t\tif (this.controlDir.control) {\n\t\t\t// @ts-ignore\n      this.controlDir.control['nativeElement'] = this.host.nativeElement;\n\t\t}\n\t}\n}\n","import * as lpn from 'google-libphonenumber';\n\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { setTheme } from 'ngx-bootstrap/utils';\n\nimport { CountryCode } from './data/country-code';\nimport { CountryISO } from './enums/country-iso.enum';\nimport { SearchCountryField } from './enums/search-country-field.enum';\nimport { ChangeData } from './interfaces/change-data';\nimport { Country } from './model/country.model';\nimport { phoneNumberValidator } from './vx-itel.validator';\nimport { PhoneNumberFormat } from './enums/phone-number-format.enum';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'vx-itel',\n  templateUrl: './vx-itel.component.html',\n  styleUrls: ['./bootstrap-dropdown.css', './vx-itel.component.css'],\n  providers: [\n    CountryCode,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      // tslint:disable-next-line:no-forward-ref\n      useExisting: forwardRef(() => VxITelComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useValue: phoneNumberValidator,\n      multi: true,\n    },\n  ],\n})\nexport class VxITelComponent implements OnInit, OnChanges {\n  @Input() value: string | undefined = '';\n  @Input() preferredCountries: Array<string> = [];\n  @Input() enablePlaceholder = true;\n  @Input() customPlaceholder: string;\n  @Input() numberFormat: PhoneNumberFormat = PhoneNumberFormat.International;\n  @Input() cssClass = 'form-control';\n  @Input() onlyCountries: Array<string> = [];\n  @Input() enableAutoCountrySelect = true;\n  @Input() searchCountryFlag = false;\n  @Input() searchCountryField: SearchCountryField[] = [SearchCountryField.All];\n  @Input() searchCountryPlaceholder = 'Search Country';\n  @Input() maxLength: number;\n  @Input() selectFirstCountry = true;\n  @Input() selectedCountryISO: CountryISO;\n  @Input() phoneValidation = true;\n  @Input() inputId = 'phone';\n  @Input() separateDialCode = false;\n  separateDialCodeClass: string;\n\n  @Output() readonly countryChange = new EventEmitter<Country>();\n\n  selectedCountry: Country = {\n    areaCodes: undefined,\n    dialCode: '',\n    htmlId: '',\n    flagClass: '',\n    iso2: '',\n    name: '',\n    placeHolder: '',\n    priority: 0,\n  };\n\n  phoneNumber: string | undefined = '';\n  allCountries: Array<Country> = [];\n  preferredCountriesInDropDown: Array<Country> = [];\n  // Has to be 'any' to prevent a need to install @types/google-libphonenumber by the package user...\n  phoneUtil: any = lpn.PhoneNumberUtil.getInstance();\n  disabled = false;\n  errors: Array<any> = ['Phone number is required.'];\n  countrySearchText = '';\n\n  @ViewChild('countryList') countryList: ElementRef;\n\n  onTouched = () => {};\n  propagateChange = (_: ChangeData) => {};\n\n  constructor(private countryCodeData: CountryCode) {\n    // If this is not set, ngx-bootstrap will try to use the bs3 CSS (which is not what we've embedded) and will\n    // Add the wrong classes and such\n    setTheme('bs4');\n  }\n\n  ngOnInit() {\n    this.init();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const selectedISO = changes['selectedCountryISO'];\n    if (\n      this.allCountries &&\n      selectedISO &&\n      selectedISO.currentValue !== selectedISO.previousValue\n    ) {\n      this.updateSelectedCountry();\n    }\n    if (changes['preferredCountries']) {\n      this.updatePreferredCountries();\n    }\n    this.checkSeparateDialCodeStyle();\n  }\n\n  /*\n\t\tThis is a wrapper method to avoid calling this.ngOnInit() in writeValue().\n\t\tRef: http://codelyzer.com/rules/no-life-cycle-call/\n\t*/\n  init() {\n    this.fetchCountryData();\n    if (this.preferredCountries.length) {\n      this.updatePreferredCountries();\n    }\n    if (this.onlyCountries.length) {\n      this.allCountries = this.allCountries.filter((c) =>\n        this.onlyCountries.includes(c.iso2)\n      );\n    }\n    if (this.selectFirstCountry) {\n      if (this.preferredCountriesInDropDown.length) {\n        this.setSelectedCountry(this.preferredCountriesInDropDown[0]);\n      } else {\n        this.setSelectedCountry(this.allCountries[0]);\n      }\n    }\n    this.updateSelectedCountry();\n    this.checkSeparateDialCodeStyle();\n  }\n\n  setSelectedCountry(country: Country) {\n    this.selectedCountry = country;\n    this.countryChange.emit(country);\n  }\n\n  /**\n   * Search country based on country name, iso2, dialCode or all of them.\n   */\n  public searchCountry() {\n    if (!this.countrySearchText) {\n      this.countryList.nativeElement\n        .querySelector('.iti__country-list li')\n        .scrollIntoView({\n          behavior: 'smooth',\n          block: 'nearest',\n          inline: 'nearest',\n        });\n      return;\n    }\n    const countrySearchTextLower = this.countrySearchText.toLowerCase();\n    // @ts-ignore\n    const country = this.allCountries.filter((c) => {\n      if (this.searchCountryField.indexOf(SearchCountryField.All) > -1) {\n        // Search in all fields\n        if (c.iso2.toLowerCase().startsWith(countrySearchTextLower)) {\n          return c;\n        }\n        if (c.name.toLowerCase().startsWith(countrySearchTextLower)) {\n          return c;\n        }\n        if (c.dialCode.startsWith(this.countrySearchText)) {\n          return c;\n        }\n      } else {\n        // Or search by specific SearchCountryField(s)\n        if (this.searchCountryField.indexOf(SearchCountryField.Iso2) > -1) {\n          if (c.iso2.toLowerCase().startsWith(countrySearchTextLower)) {\n            return c;\n          }\n        }\n        if (this.searchCountryField.indexOf(SearchCountryField.Name) > -1) {\n          if (c.name.toLowerCase().startsWith(countrySearchTextLower)) {\n            return c;\n          }\n        }\n        if (this.searchCountryField.indexOf(SearchCountryField.DialCode) > -1) {\n          if (c.dialCode.startsWith(this.countrySearchText)) {\n            return c;\n          }\n        }\n      }\n    });\n\n    if (country.length > 0) {\n      const el = this.countryList.nativeElement.querySelector(\n        '#' + country[0].htmlId\n      );\n      if (el) {\n        el.scrollIntoView({\n          behavior: 'smooth',\n          block: 'nearest',\n          inline: 'nearest',\n        });\n      }\n    }\n\n    this.checkSeparateDialCodeStyle();\n  }\n\n  public onPhoneNumberChange(): void {\n    let countryCode: string | undefined;\n    // Handle the case where the user sets the value programatically based on a persisted ChangeData obj.\n    if (this.phoneNumber && typeof this.phoneNumber === 'object') {\n      const numberObj: ChangeData = this.phoneNumber;\n      this.phoneNumber = numberObj.number;\n      countryCode = numberObj.countryCode;\n    }\n\n    this.value = this.phoneNumber;\n    countryCode = countryCode || this.selectedCountry.iso2;\n    // @ts-ignore\n    const number = this.getParsedNumber(this.phoneNumber, countryCode);\n\n    // auto select country based on the extension (and areaCode if needed) (e.g select Canada if number starts with +1 416)\n    if (this.enableAutoCountrySelect) {\n      countryCode =\n        number && number.getCountryCode()\n          ? // @ts-ignore\n            this.getCountryIsoCode(number.getCountryCode(), number)\n          : this.selectedCountry.iso2;\n      if (countryCode && countryCode !== this.selectedCountry.iso2) {\n        const newCountry = this.allCountries\n          .sort((a, b) => {\n            return a.priority - b.priority;\n          })\n          .find((c) => c.iso2 === countryCode);\n        if (newCountry) {\n          this.selectedCountry = newCountry;\n        }\n      }\n    }\n    countryCode = countryCode ? countryCode : this.selectedCountry.iso2;\n\n    this.checkSeparateDialCodeStyle();\n\n    if (!this.value) {\n      // Reason: avoid https://stackoverflow.com/a/54358133/1617590\n      // tslint:disable-next-line: no-null-keyword\n      // @ts-ignore\n      this.propagateChange(null);\n    } else {\n      const intlNo = number\n        ? this.phoneUtil.format(number, lpn.PhoneNumberFormat.INTERNATIONAL)\n        : '';\n\n      // parse phoneNumber if separate dial code is needed\n      if (this.separateDialCode && intlNo) {\n        this.value = this.removeDialCode(intlNo);\n      }\n\n      this.propagateChange({\n        number: this.value,\n        internationalNumber: intlNo,\n        nationalNumber: number\n          ? this.phoneUtil.format(number, lpn.PhoneNumberFormat.NATIONAL)\n          : '',\n        e164Number: number\n          ? this.phoneUtil.format(number, lpn.PhoneNumberFormat.E164)\n          : '',\n        countryCode: countryCode.toUpperCase(),\n        dialCode: '+' + this.selectedCountry.dialCode,\n      });\n    }\n  }\n\n  public onCountrySelect(country: Country, el: { focus: () => void }): void {\n    this.setSelectedCountry(country);\n\n    this.checkSeparateDialCodeStyle();\n\n    if (this.phoneNumber && this.phoneNumber.length > 0) {\n      this.value = this.phoneNumber;\n      const number = this.getParsedNumber(\n        this.phoneNumber,\n        this.selectedCountry.iso2\n      );\n      const intlNo = number\n        ? this.phoneUtil.format(number, lpn.PhoneNumberFormat.INTERNATIONAL)\n        : '';\n      // parse phoneNumber if separate dial code is needed\n      if (this.separateDialCode && intlNo) {\n        this.value = this.removeDialCode(intlNo);\n      }\n\n      this.propagateChange({\n        number: this.value,\n        internationalNumber: intlNo,\n        nationalNumber: number\n          ? this.phoneUtil.format(number, lpn.PhoneNumberFormat.NATIONAL)\n          : '',\n        e164Number: number\n          ? this.phoneUtil.format(number, lpn.PhoneNumberFormat.E164)\n          : '',\n        countryCode: this.selectedCountry.iso2.toUpperCase(),\n        dialCode: '+' + this.selectedCountry.dialCode,\n      });\n    } else {\n      // Reason: avoid https://stackoverflow.com/a/54358133/1617590\n      // tslint:disable-next-line: no-null-keyword\n      // @ts-ignore\n      this.propagateChange(null);\n    }\n\n    el.focus();\n  }\n\n  public onInputKeyPress(event: KeyboardEvent): void {\n    const allowedChars = /[0-9\\+\\-\\(\\)\\ ]/;\n    const allowedCtrlChars = /[axcv]/; // Allows copy-pasting\n    const allowedOtherKeys = [\n      'ArrowLeft',\n      'ArrowUp',\n      'ArrowRight',\n      'ArrowDown',\n      'Home',\n      'End',\n      'Insert',\n      'Delete',\n      'Backspace',\n    ];\n\n    if (\n      !allowedChars.test(event.key) &&\n      !(event.ctrlKey && allowedCtrlChars.test(event.key)) &&\n      !allowedOtherKeys.includes(event.key)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  writeValue(obj: any): void {\n    if (obj === undefined) {\n      this.init();\n    }\n    this.phoneNumber = obj;\n    setTimeout(() => {\n      this.onPhoneNumberChange();\n    }, 1);\n  }\n\n  resolvePlaceholder(): string {\n    let placeholder = '';\n    if (this.customPlaceholder) {\n      placeholder = this.customPlaceholder;\n    } else if (this.selectedCountry.placeHolder) {\n      placeholder = this.selectedCountry.placeHolder;\n      if (this.separateDialCode) {\n        placeholder = this.removeDialCode(placeholder);\n      }\n    }\n    return placeholder;\n  }\n\n  /* --------------------------------- Helpers -------------------------------- */\n  /**\n   * Returns parse PhoneNumber object.\n   * @param phoneNumber string\n   * @param countryCode string\n   */\n  private getParsedNumber(\n    phoneNumber: string,\n    countryCode: string\n  ): lpn.PhoneNumber {\n    let number: lpn.PhoneNumber;\n    try {\n      number = this.phoneUtil.parse(phoneNumber, countryCode.toUpperCase());\n    } catch (e) {}\n    // @ts-ignore\n    return number;\n  }\n\n  /**\n   * Adjusts input alignment based on the dial code presentation style.\n   */\n  private checkSeparateDialCodeStyle() {\n    if (this.separateDialCode && this.selectedCountry) {\n      const cntryCd = this.selectedCountry.dialCode;\n      this.separateDialCodeClass =\n        'separate-dial-code iti-sdc-' + (cntryCd.length + 1);\n    } else {\n      this.separateDialCodeClass = '';\n    }\n  }\n\n  /**\n   * Cleans dialcode from phone number string.\n   * @param phoneNumber string\n   */\n  private removeDialCode(phoneNumber: string): string {\n    const number = this.getParsedNumber(phoneNumber, this.selectedCountry.iso2);\n    phoneNumber = this.phoneUtil.format(\n      number,\n      lpn.PhoneNumberFormat[this.numberFormat]\n    );\n    if (phoneNumber.startsWith('+') && this.separateDialCode) {\n      phoneNumber = phoneNumber.substr(phoneNumber.indexOf(' ') + 1);\n    }\n    return phoneNumber;\n  }\n\n  /**\n   * Sifts through all countries and returns iso code of the primary country\n   * based on the number provided.\n   * @param countryCode country code in number format\n   * @param number PhoneNumber object\n   */\n  private getCountryIsoCode(\n    countryCode: number,\n    number: lpn.PhoneNumber\n  ): string | undefined {\n    // Will use this to match area code from the first numbers\n    // @ts-ignore\n    const rawNumber = number['values_']['2'].toString();\n    // List of all countries with countryCode (can be more than one. e.x. US, CA, DO, PR all have +1 countryCode)\n    const countries = this.allCountries.filter(\n      (c) => c.dialCode === countryCode.toString()\n    );\n    // Main country is the country, which has no areaCodes specified in country-code.ts file.\n    const mainCountry = countries.find((c) => c.areaCodes === undefined);\n    // Secondary countries are all countries, which have areaCodes specified in country-code.ts file.\n    const secondaryCountries = countries.filter(\n      (c) => c.areaCodes !== undefined\n    );\n    let matchedCountry = mainCountry ? mainCountry.iso2 : undefined;\n\n    /*\n\t\t\tIterate over each secondary country and check if nationalNumber starts with any of areaCodes available.\n\t\t\tIf no matches found, fallback to the main country.\n\t\t*/\n    secondaryCountries.forEach((country) => {\n      // @ts-ignore\n      country.areaCodes.forEach((areaCode) => {\n        if (rawNumber.startsWith(areaCode)) {\n          matchedCountry = country.iso2;\n        }\n      });\n    });\n\n    return matchedCountry;\n  }\n\n  /**\n   * Gets formatted example phone number from phoneUtil.\n   * @param countryCode string\n   */\n  protected getPhoneNumberPlaceHolder(countryCode: string): string {\n    try {\n      return this.phoneUtil.format(\n        this.phoneUtil.getExampleNumber(countryCode),\n        lpn.PhoneNumberFormat[this.numberFormat]\n      );\n    } catch (e) {\n      // @ts-ignore\n      return e;\n    }\n  }\n\n  /**\n   * Clearing the list to avoid duplicates (https://github.com/guillermodelagala/vx-itel/issues/248)\n   */\n  protected fetchCountryData(): void {\n    this.allCountries = [];\n\n    this.countryCodeData.allCountries.forEach((c) => {\n      const country: Country = {\n        name: c[0].toString(),\n        iso2: c[1].toString(),\n        dialCode: c[2].toString(),\n        priority: +c[3] || 0,\n        areaCodes: (c[4] as string[]) || undefined,\n        htmlId: `iti-0__item-${c[1].toString()}`,\n        flagClass: `iti__${c[1].toString().toLocaleLowerCase()}`,\n        placeHolder: '',\n      };\n\n      if (this.enablePlaceholder) {\n        country.placeHolder = this.getPhoneNumberPlaceHolder(\n          country.iso2.toUpperCase()\n        );\n      }\n\n      this.allCountries.push(country);\n    });\n  }\n\n  /**\n   * Populates preferredCountriesInDropDown with prefferred countries.\n   */\n  private updatePreferredCountries() {\n    if (this.preferredCountries.length) {\n      this.preferredCountriesInDropDown = [];\n      this.preferredCountries.forEach((iso2) => {\n        const preferredCountry = this.allCountries.filter((c) => {\n          return c.iso2 === iso2;\n        });\n\n        this.preferredCountriesInDropDown.push(preferredCountry[0]);\n      });\n    }\n  }\n\n  /**\n   * Updates selectedCountry.\n   */\n  private updateSelectedCountry() {\n    if (this.selectedCountryISO) {\n      // @ts-ignore\n      this.selectedCountry = this.allCountries.find((c) => {\n        return c.iso2.toLowerCase() === this.selectedCountryISO.toLowerCase();\n      });\n      if (this.selectedCountry) {\n        if (this.phoneNumber) {\n          this.onPhoneNumberChange();\n        } else {\n          // Reason: avoid https://stackoverflow.com/a/54358133/1617590\n          // tslint:disable-next-line: no-null-keyword\n          // @ts-ignore\n          this.propagateChange(null);\n        }\n      }\n    }\n  }\n}\n","<div class=\"iti iti--allow-dropdown\"\n\t[ngClass]=\"separateDialCodeClass\">\n\t<div class=\"iti__flag-container\"\n\t\tdropdown\n\t\t[ngClass]=\"{'disabled': disabled}\"\n\t\t[isDisabled]=\"disabled\">\n\t\t<div class=\"iti__selected-flag dropdown-toggle\"\n\t\t\tdropdownToggle>\n\t\t\t<div class=\"iti__flag\"\n\t\t\t\t[ngClass]=\"selectedCountry?.flagClass || ''\"></div>\n\t\t\t<div *ngIf=\"separateDialCode\"\n\t\t\t\tclass=\"selected-dial-code\">+{{selectedCountry.dialCode}}</div>\n\t\t\t<div class=\"iti__arrow\"></div>\n\t\t</div>\n\t\t<div *dropdownMenu\n\t\t\tclass=\"dropdown-menu country-dropdown\">\n\t\t\t<div class=\"search-container\"\n\t\t\t\t*ngIf=\"searchCountryFlag && searchCountryField\">\n\t\t\t\t<input id=\"country-search-box\"\n\t\t\t\t\t[(ngModel)]=\"countrySearchText\"\n\t\t\t\t\t(keyup)=\"searchCountry()\"\n\t\t\t\t\t(click)=\"$event.stopPropagation()\"\n\t\t\t\t\t[placeholder]=\"searchCountryPlaceholder\"\n\t\t\t\t\tautofocus>\n\t\t\t</div>\n\t\t\t<ul class=\"iti__country-list\"\n\t\t\t\t#countryList>\n\t\t\t\t<li class=\"iti__country iti__preferred\"\n\t\t\t\t\t*ngFor=\"let country of preferredCountriesInDropDown\"\n\t\t\t\t\t(click)=\"onCountrySelect(country, focusable)\"\n\t\t\t\t\t[id]=\"country.htmlId+'-preferred'\">\n\t\t\t\t\t<div class=\"iti__flag-box\">\n\t\t\t\t\t\t<div class=\"iti__flag\"\n\t\t\t\t\t\t\t[ngClass]=\"country.flagClass\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<span class=\"iti__country-name\">{{country.name}}</span>\n\t\t\t\t\t<span class=\"iti__dial-code\">+{{country.dialCode}}</span>\n\t\t\t\t</li>\n\t\t\t\t<li class=\"iti__divider\"\n\t\t\t\t\t*ngIf=\"preferredCountriesInDropDown?.length\"></li>\n\t\t\t\t<li class=\"iti__country iti__standard\"\n\t\t\t\t\t*ngFor=\"let country of allCountries\"\n\t\t\t\t\t(click)=\"onCountrySelect(country, focusable)\"\n\t\t\t\t\t[id]=\"country.htmlId\">\n\t\t\t\t\t<div class=\"iti__flag-box\">\n\t\t\t\t\t\t<div class=\"iti__flag\"\n\t\t\t\t\t\t\t[ngClass]=\"country.flagClass\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<span class=\"iti__country-name\">{{country.name}}</span>\n\t\t\t\t\t<span class=\"iti__dial-code\">+{{country.dialCode}}</span>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n\t<input type=\"tel\"\n\t\t[id]=\"inputId\"\n\t\tautocomplete=\"off\"\n\t\t[ngClass]=\"cssClass\"\n\t\t(blur)=\"onTouched()\"\n\t\t(keypress)=\"onInputKeyPress($event)\"\n\t\t[(ngModel)]=\"phoneNumber\"\n\t\t(ngModelChange)=\"onPhoneNumberChange()\"\n\t\t[disabled]=\"disabled\"\n\t\t[placeholder]=\"resolvePlaceholder()\"\n\t\t[attr.maxLength]=\"maxLength\"\n\t\t[attr.validation]=\"phoneValidation\"\n\t\t#focusable>\n</div>\n","import { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { NativeElementInjectorDirective } from './directives/native-element-injector.directive';\nimport { VxITelComponent } from './vx-itel.component';\n\nexport const dropdownModuleForRoot: ModuleWithProviders<BsDropdownModule> = BsDropdownModule.forRoot();\n\n@NgModule({\n\tdeclarations: [VxITelComponent, NativeElementInjectorDirective],\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tdropdownModuleForRoot,\n  ],\n\texports: [VxITelComponent, NativeElementInjectorDirective],\n})\nexport class VxITelModule {\n\n}\n","/*\n * Public API Surface of vx-itel\n */\n\nexport * from './lib/vx-itel.component';\nexport * from './lib/directives/native-element-injector.directive';\nexport * from './lib/vx-itel.module';\nexport * from './lib/enums/country-iso.enum';\nexport * from './lib/enums/search-country-field.enum';\nexport * from './lib/enums/phone-number-format.enum';\nexport * from './lib/interfaces/change-data';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1","i1.CountryCode","i5.NativeElementInjectorDirective"],"mappings":"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"}